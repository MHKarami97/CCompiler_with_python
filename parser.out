Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> fun_declaration
Rule 6     var_declaration -> type_specifier var_decl_list SEMICOLON
Rule 7     var_declaration -> type_specifier error SEMICOLON
Rule 8     var_decl_list -> var_decl_list COMMA var_decl_id
Rule 9     var_decl_list -> var_decl_id
Rule 10    var_decl_id -> ID
Rule 11    var_decl_id -> ID OPENBR NUMBER CLOSEBR
Rule 12    var_decl_id -> ID ASSIGN ID
Rule 13    var_decl_id -> ID ASSIGN NUMBER
Rule 14    var_decl_id -> ID ASSIGN FLOAT_NUMBER
Rule 15    var_decl_id -> ID ASSIGN STRING
Rule 16    type_specifier -> INT
Rule 17    type_specifier -> FLOAT
Rule 18    type_specifier -> VOID
Rule 19    type_specifier -> STRING
Rule 20    fun_declaration -> type_specifier ID LPAREN params RPAREN statement
Rule 21    params -> param_list
Rule 22    params -> <empty>
Rule 23    param_list -> param_list COMMA param_type_list
Rule 24    param_list -> param_type_list
Rule 25    param_type_list -> type_specifier param_id_list
Rule 26    param_id_list -> param_id_list COMMA param_id
Rule 27    param_id_list -> param_id
Rule 28    param_id -> ID
Rule 29    compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET
Rule 30    local_declarations -> local_declarations var_declaration
Rule 31    local_declarations -> <empty>
Rule 32    statement_list -> statement statement_list
Rule 33    statement_list -> <empty>
Rule 34    statement -> expression_stmt
Rule 35    statement -> compound_stmt
Rule 36    statement -> if_stmt
Rule 37    statement -> while_stmt
Rule 38    statement -> for_stmt
Rule 39    statement -> do_while_stmt
Rule 40    statement -> break_stmt
Rule 41    expression_stmt -> expression SEMICOLON
Rule 42    expression_stmt -> SEMICOLON
Rule 43    do_while_stmt -> do statement while LPAREN expression RPAREN
Rule 44    do -> DO
Rule 45    if_stmt -> if LPAREN expression RPAREN statement
Rule 46    if_stmt -> if LPAREN expression RPAREN statement else statement
Rule 47    if -> IF
Rule 48    else -> ELSE
Rule 49    while_stmt -> while LPAREN expression RPAREN statement
Rule 50    while -> WHILE
Rule 51    for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement
Rule 52    semicolon -> SEMICOLON
Rule 53    for -> FOR
Rule 54    break_stmt -> BREAK SEMICOLON
Rule 55    expression -> var ASSIGN expression
Rule 56    expression -> var addopration_expression expression
Rule 57    expression -> var mulopration_expression expression
Rule 58    expression -> ID PLUSPLUS
Rule 59    expression -> ID MINUSMINUS
Rule 60    expression -> simple_expression
Rule 61    addopration_expression -> PLUS_ASSIGN
Rule 62    addopration_expression -> MINUS_ASSIGN
Rule 63    mulopration_expression -> TIMES_ASSIGN
Rule 64    mulopration_expression -> DIVIDE_ASSIGN
Rule 65    var -> ID
Rule 66    var -> ID OPENBR NUMBER CLOSEBR
Rule 67    simple_expression -> simple_expression AND unary_rel_expression
Rule 68    simple_expression -> unary_rel_expression
Rule 69    unary_rel_expression -> NOTEQUAL unary_rel_expression
Rule 70    unary_rel_expression -> rel_expression
Rule 71    rel_expression -> add_expression relop add_expression
Rule 72    rel_expression -> add_expression
Rule 73    relop -> EQUALS
Rule 74    relop -> LESS
Rule 75    relop -> LARGE
Rule 76    relop -> LARGETHAN
Rule 77    relop -> LESSTHAN
Rule 78    relop -> NOTEQUAL
Rule 79    add_expression -> add_expression addop term
Rule 80    add_expression -> term
Rule 81    addop -> PLUS
Rule 82    addop -> MINUS
Rule 83    term -> term mulop unary_expression
Rule 84    term -> unary_expression
Rule 85    mulop -> TIMES
Rule 86    mulop -> DIVIDE
Rule 87    unary_expression -> addop unary_expression
Rule 88    unary_expression -> factor
Rule 89    factor -> LPAREN expression RPAREN
Rule 90    factor -> var
Rule 91    factor -> call
Rule 92    factor -> constant
Rule 93    constant -> TRUE
Rule 94    constant -> FALSE
Rule 95    constant -> NUMBER
Rule 96    constant -> FLOAT_NUMBER
Rule 97    call -> ID LPAREN args RPAREN
Rule 98    args -> args_list
Rule 99    args -> <empty>
Rule 100   args_list -> args_list COMMA expression
Rule 101   args_list -> expression

Terminals, with rules where they appear

AND                  : 67
ASSIGN               : 12 13 14 15 55
BREAK                : 54
CBRACELET            : 29
CLOSEBR              : 11 66
COMMA                : 8 23 26 100
DIVIDE               : 86
DIVIDE_ASSIGN        : 64
DO                   : 44
ELSE                 : 48
EQUALS               : 73
FALSE                : 94
FLOAT                : 17
FLOAT_NUMBER         : 14 96
FOR                  : 53
ID                   : 10 11 12 12 13 14 15 20 28 58 59 65 66 97
IF                   : 47
INT                  : 16
LARGE                : 75
LARGETHAN            : 76
LESS                 : 74
LESSTHAN             : 77
LPAREN               : 20 43 45 46 49 51 89 97
MINUS                : 82
MINUSMINUS           : 59
MINUS_ASSIGN         : 62
NOTEQUAL             : 69 78
NUMBER               : 11 13 66 95
OBRACELET            : 29
OPENBR               : 11 66
PLUS                 : 81
PLUSPLUS             : 58
PLUS_ASSIGN          : 61
RPAREN               : 20 43 45 46 49 51 89 97
SEMICOLON            : 6 7 41 42 52 54
STRING               : 15 19
TIMES                : 85
TIMES_ASSIGN         : 63
TRUE                 : 93
VOID                 : 18
WHILE                : 50
error                : 7

Nonterminals, with rules where they appear

add_expression       : 71 71 72 79
addop                : 79 87
addopration_expression : 56
args                 : 97
args_list            : 98 100
break_stmt           : 40
call                 : 91
compound_stmt        : 35
constant             : 92
declaration          : 2 3
declaration_list     : 1 2
do                   : 43
do_while_stmt        : 39
else                 : 46
expression           : 41 43 45 46 49 51 51 55 56 57 89 100 101
expression_stmt      : 34
factor               : 88
for                  : 51
for_stmt             : 38
fun_declaration      : 5
if                   : 45 46
if_stmt              : 36
local_declarations   : 29 29 30
mulop                : 83
mulopration_expression : 57
param_id             : 26 27
param_id_list        : 25 26
param_list           : 21 23
param_type_list      : 23 24
params               : 20
program              : 0
rel_expression       : 70
relop                : 71
semicolon            : 51
simple_expression    : 60 67
statement            : 20 32 43 45 46 46 49 51
statement_list       : 29 32
term                 : 79 80 83
type_specifier       : 6 7 20 25
unary_expression     : 83 84 87
unary_rel_expression : 67 68 69
var                  : 55 56 57 90
var_decl_id          : 8 9
var_decl_list        : 6 8
var_declaration      : 4 30 51
while                : 43 49
while_stmt           : 37

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) var_declaration -> . type_specifier var_decl_list SEMICOLON
    (7) var_declaration -> . type_specifier error SEMICOLON
    (20) fun_declaration -> . type_specifier ID LPAREN params RPAREN statement
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (18) type_specifier -> . VOID
    (19) type_specifier -> . STRING

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    STRING          shift and go to state 10

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    var_declaration                shift and go to state 4
    fun_declaration                shift and go to state 5
    type_specifier                 shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) var_declaration -> . type_specifier var_decl_list SEMICOLON
    (7) var_declaration -> . type_specifier error SEMICOLON
    (20) fun_declaration -> . type_specifier ID LPAREN params RPAREN statement
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (18) type_specifier -> . VOID
    (19) type_specifier -> . STRING

    $end            reduce using rule 1 (program -> declaration_list .)
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    STRING          shift and go to state 10

    declaration                    shift and go to state 11
    var_declaration                shift and go to state 4
    fun_declaration                shift and go to state 5
    type_specifier                 shift and go to state 6

state 3

    (3) declaration_list -> declaration .

    INT             reduce using rule 3 (declaration_list -> declaration .)
    FLOAT           reduce using rule 3 (declaration_list -> declaration .)
    VOID            reduce using rule 3 (declaration_list -> declaration .)
    STRING          reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 4

    (4) declaration -> var_declaration .

    INT             reduce using rule 4 (declaration -> var_declaration .)
    FLOAT           reduce using rule 4 (declaration -> var_declaration .)
    VOID            reduce using rule 4 (declaration -> var_declaration .)
    STRING          reduce using rule 4 (declaration -> var_declaration .)
    $end            reduce using rule 4 (declaration -> var_declaration .)


state 5

    (5) declaration -> fun_declaration .

    INT             reduce using rule 5 (declaration -> fun_declaration .)
    FLOAT           reduce using rule 5 (declaration -> fun_declaration .)
    VOID            reduce using rule 5 (declaration -> fun_declaration .)
    STRING          reduce using rule 5 (declaration -> fun_declaration .)
    $end            reduce using rule 5 (declaration -> fun_declaration .)


state 6

    (6) var_declaration -> type_specifier . var_decl_list SEMICOLON
    (7) var_declaration -> type_specifier . error SEMICOLON
    (20) fun_declaration -> type_specifier . ID LPAREN params RPAREN statement
    (8) var_decl_list -> . var_decl_list COMMA var_decl_id
    (9) var_decl_list -> . var_decl_id
    (10) var_decl_id -> . ID
    (11) var_decl_id -> . ID OPENBR NUMBER CLOSEBR
    (12) var_decl_id -> . ID ASSIGN ID
    (13) var_decl_id -> . ID ASSIGN NUMBER
    (14) var_decl_id -> . ID ASSIGN FLOAT_NUMBER
    (15) var_decl_id -> . ID ASSIGN STRING

    error           shift and go to state 13
    ID              shift and go to state 14

    var_decl_list                  shift and go to state 12
    var_decl_id                    shift and go to state 15

state 7

    (16) type_specifier -> INT .

    error           reduce using rule 16 (type_specifier -> INT .)
    ID              reduce using rule 16 (type_specifier -> INT .)


state 8

    (17) type_specifier -> FLOAT .

    error           reduce using rule 17 (type_specifier -> FLOAT .)
    ID              reduce using rule 17 (type_specifier -> FLOAT .)


state 9

    (18) type_specifier -> VOID .

    error           reduce using rule 18 (type_specifier -> VOID .)
    ID              reduce using rule 18 (type_specifier -> VOID .)


state 10

    (19) type_specifier -> STRING .

    error           reduce using rule 19 (type_specifier -> STRING .)
    ID              reduce using rule 19 (type_specifier -> STRING .)


state 11

    (2) declaration_list -> declaration_list declaration .

    INT             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    STRING          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 12

    (6) var_declaration -> type_specifier var_decl_list . SEMICOLON
    (8) var_decl_list -> var_decl_list . COMMA var_decl_id

    SEMICOLON       shift and go to state 16
    COMMA           shift and go to state 17


state 13

    (7) var_declaration -> type_specifier error . SEMICOLON

    SEMICOLON       shift and go to state 18


state 14

    (20) fun_declaration -> type_specifier ID . LPAREN params RPAREN statement
    (10) var_decl_id -> ID .
    (11) var_decl_id -> ID . OPENBR NUMBER CLOSEBR
    (12) var_decl_id -> ID . ASSIGN ID
    (13) var_decl_id -> ID . ASSIGN NUMBER
    (14) var_decl_id -> ID . ASSIGN FLOAT_NUMBER
    (15) var_decl_id -> ID . ASSIGN STRING

    LPAREN          shift and go to state 19
    SEMICOLON       reduce using rule 10 (var_decl_id -> ID .)
    COMMA           reduce using rule 10 (var_decl_id -> ID .)
    OPENBR          shift and go to state 20
    ASSIGN          shift and go to state 21


state 15

    (9) var_decl_list -> var_decl_id .

    SEMICOLON       reduce using rule 9 (var_decl_list -> var_decl_id .)
    COMMA           reduce using rule 9 (var_decl_list -> var_decl_id .)


state 16

    (6) var_declaration -> type_specifier var_decl_list SEMICOLON .

    INT             reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    FLOAT           reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    VOID            reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    STRING          reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    $end            reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    SEMICOLON       reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    OBRACELET       reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    BREAK           reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    ID              reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    IF              reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    WHILE           reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    FOR             reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    DO              reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    NOTEQUAL        reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    PLUS            reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    MINUS           reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    LPAREN          reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    TRUE            reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    FALSE           reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    NUMBER          reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    FLOAT_NUMBER    reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)
    CBRACELET       reduce using rule 6 (var_declaration -> type_specifier var_decl_list SEMICOLON .)


state 17

    (8) var_decl_list -> var_decl_list COMMA . var_decl_id
    (10) var_decl_id -> . ID
    (11) var_decl_id -> . ID OPENBR NUMBER CLOSEBR
    (12) var_decl_id -> . ID ASSIGN ID
    (13) var_decl_id -> . ID ASSIGN NUMBER
    (14) var_decl_id -> . ID ASSIGN FLOAT_NUMBER
    (15) var_decl_id -> . ID ASSIGN STRING

    ID              shift and go to state 23

    var_decl_id                    shift and go to state 22

state 18

    (7) var_declaration -> type_specifier error SEMICOLON .

    INT             reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    FLOAT           reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    VOID            reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    STRING          reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    $end            reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    SEMICOLON       reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    OBRACELET       reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    BREAK           reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    ID              reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    IF              reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    WHILE           reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    FOR             reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    DO              reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    NOTEQUAL        reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    PLUS            reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    MINUS           reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    LPAREN          reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    TRUE            reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    FALSE           reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    NUMBER          reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    FLOAT_NUMBER    reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)
    CBRACELET       reduce using rule 7 (var_declaration -> type_specifier error SEMICOLON .)


state 19

    (20) fun_declaration -> type_specifier ID LPAREN . params RPAREN statement
    (21) params -> . param_list
    (22) params -> .
    (23) param_list -> . param_list COMMA param_type_list
    (24) param_list -> . param_type_list
    (25) param_type_list -> . type_specifier param_id_list
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (18) type_specifier -> . VOID
    (19) type_specifier -> . STRING

    RPAREN          reduce using rule 22 (params -> .)
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    STRING          shift and go to state 10

    type_specifier                 shift and go to state 24
    params                         shift and go to state 25
    param_list                     shift and go to state 26
    param_type_list                shift and go to state 27

state 20

    (11) var_decl_id -> ID OPENBR . NUMBER CLOSEBR

    NUMBER          shift and go to state 28


state 21

    (12) var_decl_id -> ID ASSIGN . ID
    (13) var_decl_id -> ID ASSIGN . NUMBER
    (14) var_decl_id -> ID ASSIGN . FLOAT_NUMBER
    (15) var_decl_id -> ID ASSIGN . STRING

    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    FLOAT_NUMBER    shift and go to state 31
    STRING          shift and go to state 32


state 22

    (8) var_decl_list -> var_decl_list COMMA var_decl_id .

    SEMICOLON       reduce using rule 8 (var_decl_list -> var_decl_list COMMA var_decl_id .)
    COMMA           reduce using rule 8 (var_decl_list -> var_decl_list COMMA var_decl_id .)


state 23

    (10) var_decl_id -> ID .
    (11) var_decl_id -> ID . OPENBR NUMBER CLOSEBR
    (12) var_decl_id -> ID . ASSIGN ID
    (13) var_decl_id -> ID . ASSIGN NUMBER
    (14) var_decl_id -> ID . ASSIGN FLOAT_NUMBER
    (15) var_decl_id -> ID . ASSIGN STRING

    SEMICOLON       reduce using rule 10 (var_decl_id -> ID .)
    COMMA           reduce using rule 10 (var_decl_id -> ID .)
    OPENBR          shift and go to state 20
    ASSIGN          shift and go to state 21


state 24

    (25) param_type_list -> type_specifier . param_id_list
    (26) param_id_list -> . param_id_list COMMA param_id
    (27) param_id_list -> . param_id
    (28) param_id -> . ID

    ID              shift and go to state 35

    param_id_list                  shift and go to state 33
    param_id                       shift and go to state 34

state 25

    (20) fun_declaration -> type_specifier ID LPAREN params . RPAREN statement

    RPAREN          shift and go to state 36


state 26

    (21) params -> param_list .
    (23) param_list -> param_list . COMMA param_type_list

    RPAREN          reduce using rule 21 (params -> param_list .)
    COMMA           shift and go to state 37


state 27

    (24) param_list -> param_type_list .

    COMMA           reduce using rule 24 (param_list -> param_type_list .)
    RPAREN          reduce using rule 24 (param_list -> param_type_list .)


state 28

    (11) var_decl_id -> ID OPENBR NUMBER . CLOSEBR

    CLOSEBR         shift and go to state 38


state 29

    (12) var_decl_id -> ID ASSIGN ID .

    SEMICOLON       reduce using rule 12 (var_decl_id -> ID ASSIGN ID .)
    COMMA           reduce using rule 12 (var_decl_id -> ID ASSIGN ID .)


state 30

    (13) var_decl_id -> ID ASSIGN NUMBER .

    SEMICOLON       reduce using rule 13 (var_decl_id -> ID ASSIGN NUMBER .)
    COMMA           reduce using rule 13 (var_decl_id -> ID ASSIGN NUMBER .)


state 31

    (14) var_decl_id -> ID ASSIGN FLOAT_NUMBER .

    SEMICOLON       reduce using rule 14 (var_decl_id -> ID ASSIGN FLOAT_NUMBER .)
    COMMA           reduce using rule 14 (var_decl_id -> ID ASSIGN FLOAT_NUMBER .)


state 32

    (15) var_decl_id -> ID ASSIGN STRING .

    SEMICOLON       reduce using rule 15 (var_decl_id -> ID ASSIGN STRING .)
    COMMA           reduce using rule 15 (var_decl_id -> ID ASSIGN STRING .)


state 33

    (25) param_type_list -> type_specifier param_id_list .
    (26) param_id_list -> param_id_list . COMMA param_id

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 25 (param_type_list -> type_specifier param_id_list .)
    COMMA           shift and go to state 39

  ! COMMA           [ reduce using rule 25 (param_type_list -> type_specifier param_id_list .) ]


state 34

    (27) param_id_list -> param_id .

    COMMA           reduce using rule 27 (param_id_list -> param_id .)
    RPAREN          reduce using rule 27 (param_id_list -> param_id .)


state 35

    (28) param_id -> ID .

    COMMA           reduce using rule 28 (param_id -> ID .)
    RPAREN          reduce using rule 28 (param_id -> ID .)


state 36

    (20) fun_declaration -> type_specifier ID LPAREN params RPAREN . statement
    (34) statement -> . expression_stmt
    (35) statement -> . compound_stmt
    (36) statement -> . if_stmt
    (37) statement -> . while_stmt
    (38) statement -> . for_stmt
    (39) statement -> . do_while_stmt
    (40) statement -> . break_stmt
    (41) expression_stmt -> . expression SEMICOLON
    (42) expression_stmt -> . SEMICOLON
    (29) compound_stmt -> . OBRACELET local_declarations statement_list local_declarations CBRACELET
    (45) if_stmt -> . if LPAREN expression RPAREN statement
    (46) if_stmt -> . if LPAREN expression RPAREN statement else statement
    (49) while_stmt -> . while LPAREN expression RPAREN statement
    (51) for_stmt -> . for LPAREN var_declaration expression semicolon expression RPAREN statement
    (43) do_while_stmt -> . do statement while LPAREN expression RPAREN
    (54) break_stmt -> . BREAK SEMICOLON
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (47) if -> . IF
    (50) while -> . WHILE
    (53) for -> . FOR
    (44) do -> . DO
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    SEMICOLON       shift and go to state 51
    OBRACELET       shift and go to state 52
    BREAK           shift and go to state 57
    ID              shift and go to state 40
    IF              shift and go to state 60
    WHILE           shift and go to state 61
    FOR             shift and go to state 62
    DO              shift and go to state 63
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    statement                      shift and go to state 42
    expression_stmt                shift and go to state 43
    compound_stmt                  shift and go to state 44
    if_stmt                        shift and go to state 45
    while_stmt                     shift and go to state 46
    for_stmt                       shift and go to state 47
    do_while_stmt                  shift and go to state 48
    break_stmt                     shift and go to state 49
    expression                     shift and go to state 50
    if                             shift and go to state 53
    while                          shift and go to state 54
    for                            shift and go to state 55
    do                             shift and go to state 56
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 37

    (23) param_list -> param_list COMMA . param_type_list
    (25) param_type_list -> . type_specifier param_id_list
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (18) type_specifier -> . VOID
    (19) type_specifier -> . STRING

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    STRING          shift and go to state 10

    param_type_list                shift and go to state 80
    type_specifier                 shift and go to state 24

state 38

    (11) var_decl_id -> ID OPENBR NUMBER CLOSEBR .

    SEMICOLON       reduce using rule 11 (var_decl_id -> ID OPENBR NUMBER CLOSEBR .)
    COMMA           reduce using rule 11 (var_decl_id -> ID OPENBR NUMBER CLOSEBR .)


state 39

    (26) param_id_list -> param_id_list COMMA . param_id
    (28) param_id -> . ID

    ID              shift and go to state 35

    param_id                       shift and go to state 81

state 40

    (58) expression -> ID . PLUSPLUS
    (59) expression -> ID . MINUSMINUS
    (65) var -> ID .
    (66) var -> ID . OPENBR NUMBER CLOSEBR
    (97) call -> ID . LPAREN args RPAREN

    PLUSPLUS        shift and go to state 82
    MINUSMINUS      shift and go to state 83
    ASSIGN          reduce using rule 65 (var -> ID .)
    PLUS_ASSIGN     reduce using rule 65 (var -> ID .)
    MINUS_ASSIGN    reduce using rule 65 (var -> ID .)
    TIMES_ASSIGN    reduce using rule 65 (var -> ID .)
    DIVIDE_ASSIGN   reduce using rule 65 (var -> ID .)
    TIMES           reduce using rule 65 (var -> ID .)
    DIVIDE          reduce using rule 65 (var -> ID .)
    EQUALS          reduce using rule 65 (var -> ID .)
    LESS            reduce using rule 65 (var -> ID .)
    LARGE           reduce using rule 65 (var -> ID .)
    LARGETHAN       reduce using rule 65 (var -> ID .)
    LESSTHAN        reduce using rule 65 (var -> ID .)
    NOTEQUAL        reduce using rule 65 (var -> ID .)
    PLUS            reduce using rule 65 (var -> ID .)
    MINUS           reduce using rule 65 (var -> ID .)
    AND             reduce using rule 65 (var -> ID .)
    SEMICOLON       reduce using rule 65 (var -> ID .)
    RPAREN          reduce using rule 65 (var -> ID .)
    COMMA           reduce using rule 65 (var -> ID .)
    OPENBR          shift and go to state 84
    LPAREN          shift and go to state 85


state 41

    (89) factor -> LPAREN . expression RPAREN
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    expression                     shift and go to state 86
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 42

    (20) fun_declaration -> type_specifier ID LPAREN params RPAREN statement .

    INT             reduce using rule 20 (fun_declaration -> type_specifier ID LPAREN params RPAREN statement .)
    FLOAT           reduce using rule 20 (fun_declaration -> type_specifier ID LPAREN params RPAREN statement .)
    VOID            reduce using rule 20 (fun_declaration -> type_specifier ID LPAREN params RPAREN statement .)
    STRING          reduce using rule 20 (fun_declaration -> type_specifier ID LPAREN params RPAREN statement .)
    $end            reduce using rule 20 (fun_declaration -> type_specifier ID LPAREN params RPAREN statement .)


state 43

    (34) statement -> expression_stmt .

    INT             reduce using rule 34 (statement -> expression_stmt .)
    FLOAT           reduce using rule 34 (statement -> expression_stmt .)
    VOID            reduce using rule 34 (statement -> expression_stmt .)
    STRING          reduce using rule 34 (statement -> expression_stmt .)
    $end            reduce using rule 34 (statement -> expression_stmt .)
    WHILE           reduce using rule 34 (statement -> expression_stmt .)
    SEMICOLON       reduce using rule 34 (statement -> expression_stmt .)
    OBRACELET       reduce using rule 34 (statement -> expression_stmt .)
    BREAK           reduce using rule 34 (statement -> expression_stmt .)
    ID              reduce using rule 34 (statement -> expression_stmt .)
    IF              reduce using rule 34 (statement -> expression_stmt .)
    FOR             reduce using rule 34 (statement -> expression_stmt .)
    DO              reduce using rule 34 (statement -> expression_stmt .)
    NOTEQUAL        reduce using rule 34 (statement -> expression_stmt .)
    PLUS            reduce using rule 34 (statement -> expression_stmt .)
    MINUS           reduce using rule 34 (statement -> expression_stmt .)
    LPAREN          reduce using rule 34 (statement -> expression_stmt .)
    TRUE            reduce using rule 34 (statement -> expression_stmt .)
    FALSE           reduce using rule 34 (statement -> expression_stmt .)
    NUMBER          reduce using rule 34 (statement -> expression_stmt .)
    FLOAT_NUMBER    reduce using rule 34 (statement -> expression_stmt .)
    CBRACELET       reduce using rule 34 (statement -> expression_stmt .)
    ELSE            reduce using rule 34 (statement -> expression_stmt .)


state 44

    (35) statement -> compound_stmt .

    INT             reduce using rule 35 (statement -> compound_stmt .)
    FLOAT           reduce using rule 35 (statement -> compound_stmt .)
    VOID            reduce using rule 35 (statement -> compound_stmt .)
    STRING          reduce using rule 35 (statement -> compound_stmt .)
    $end            reduce using rule 35 (statement -> compound_stmt .)
    WHILE           reduce using rule 35 (statement -> compound_stmt .)
    SEMICOLON       reduce using rule 35 (statement -> compound_stmt .)
    OBRACELET       reduce using rule 35 (statement -> compound_stmt .)
    BREAK           reduce using rule 35 (statement -> compound_stmt .)
    ID              reduce using rule 35 (statement -> compound_stmt .)
    IF              reduce using rule 35 (statement -> compound_stmt .)
    FOR             reduce using rule 35 (statement -> compound_stmt .)
    DO              reduce using rule 35 (statement -> compound_stmt .)
    NOTEQUAL        reduce using rule 35 (statement -> compound_stmt .)
    PLUS            reduce using rule 35 (statement -> compound_stmt .)
    MINUS           reduce using rule 35 (statement -> compound_stmt .)
    LPAREN          reduce using rule 35 (statement -> compound_stmt .)
    TRUE            reduce using rule 35 (statement -> compound_stmt .)
    FALSE           reduce using rule 35 (statement -> compound_stmt .)
    NUMBER          reduce using rule 35 (statement -> compound_stmt .)
    FLOAT_NUMBER    reduce using rule 35 (statement -> compound_stmt .)
    CBRACELET       reduce using rule 35 (statement -> compound_stmt .)
    ELSE            reduce using rule 35 (statement -> compound_stmt .)


state 45

    (36) statement -> if_stmt .

    INT             reduce using rule 36 (statement -> if_stmt .)
    FLOAT           reduce using rule 36 (statement -> if_stmt .)
    VOID            reduce using rule 36 (statement -> if_stmt .)
    STRING          reduce using rule 36 (statement -> if_stmt .)
    $end            reduce using rule 36 (statement -> if_stmt .)
    WHILE           reduce using rule 36 (statement -> if_stmt .)
    SEMICOLON       reduce using rule 36 (statement -> if_stmt .)
    OBRACELET       reduce using rule 36 (statement -> if_stmt .)
    BREAK           reduce using rule 36 (statement -> if_stmt .)
    ID              reduce using rule 36 (statement -> if_stmt .)
    IF              reduce using rule 36 (statement -> if_stmt .)
    FOR             reduce using rule 36 (statement -> if_stmt .)
    DO              reduce using rule 36 (statement -> if_stmt .)
    NOTEQUAL        reduce using rule 36 (statement -> if_stmt .)
    PLUS            reduce using rule 36 (statement -> if_stmt .)
    MINUS           reduce using rule 36 (statement -> if_stmt .)
    LPAREN          reduce using rule 36 (statement -> if_stmt .)
    TRUE            reduce using rule 36 (statement -> if_stmt .)
    FALSE           reduce using rule 36 (statement -> if_stmt .)
    NUMBER          reduce using rule 36 (statement -> if_stmt .)
    FLOAT_NUMBER    reduce using rule 36 (statement -> if_stmt .)
    CBRACELET       reduce using rule 36 (statement -> if_stmt .)
    ELSE            reduce using rule 36 (statement -> if_stmt .)


state 46

    (37) statement -> while_stmt .

    INT             reduce using rule 37 (statement -> while_stmt .)
    FLOAT           reduce using rule 37 (statement -> while_stmt .)
    VOID            reduce using rule 37 (statement -> while_stmt .)
    STRING          reduce using rule 37 (statement -> while_stmt .)
    $end            reduce using rule 37 (statement -> while_stmt .)
    WHILE           reduce using rule 37 (statement -> while_stmt .)
    SEMICOLON       reduce using rule 37 (statement -> while_stmt .)
    OBRACELET       reduce using rule 37 (statement -> while_stmt .)
    BREAK           reduce using rule 37 (statement -> while_stmt .)
    ID              reduce using rule 37 (statement -> while_stmt .)
    IF              reduce using rule 37 (statement -> while_stmt .)
    FOR             reduce using rule 37 (statement -> while_stmt .)
    DO              reduce using rule 37 (statement -> while_stmt .)
    NOTEQUAL        reduce using rule 37 (statement -> while_stmt .)
    PLUS            reduce using rule 37 (statement -> while_stmt .)
    MINUS           reduce using rule 37 (statement -> while_stmt .)
    LPAREN          reduce using rule 37 (statement -> while_stmt .)
    TRUE            reduce using rule 37 (statement -> while_stmt .)
    FALSE           reduce using rule 37 (statement -> while_stmt .)
    NUMBER          reduce using rule 37 (statement -> while_stmt .)
    FLOAT_NUMBER    reduce using rule 37 (statement -> while_stmt .)
    CBRACELET       reduce using rule 37 (statement -> while_stmt .)
    ELSE            reduce using rule 37 (statement -> while_stmt .)


state 47

    (38) statement -> for_stmt .

    INT             reduce using rule 38 (statement -> for_stmt .)
    FLOAT           reduce using rule 38 (statement -> for_stmt .)
    VOID            reduce using rule 38 (statement -> for_stmt .)
    STRING          reduce using rule 38 (statement -> for_stmt .)
    $end            reduce using rule 38 (statement -> for_stmt .)
    WHILE           reduce using rule 38 (statement -> for_stmt .)
    SEMICOLON       reduce using rule 38 (statement -> for_stmt .)
    OBRACELET       reduce using rule 38 (statement -> for_stmt .)
    BREAK           reduce using rule 38 (statement -> for_stmt .)
    ID              reduce using rule 38 (statement -> for_stmt .)
    IF              reduce using rule 38 (statement -> for_stmt .)
    FOR             reduce using rule 38 (statement -> for_stmt .)
    DO              reduce using rule 38 (statement -> for_stmt .)
    NOTEQUAL        reduce using rule 38 (statement -> for_stmt .)
    PLUS            reduce using rule 38 (statement -> for_stmt .)
    MINUS           reduce using rule 38 (statement -> for_stmt .)
    LPAREN          reduce using rule 38 (statement -> for_stmt .)
    TRUE            reduce using rule 38 (statement -> for_stmt .)
    FALSE           reduce using rule 38 (statement -> for_stmt .)
    NUMBER          reduce using rule 38 (statement -> for_stmt .)
    FLOAT_NUMBER    reduce using rule 38 (statement -> for_stmt .)
    CBRACELET       reduce using rule 38 (statement -> for_stmt .)
    ELSE            reduce using rule 38 (statement -> for_stmt .)


state 48

    (39) statement -> do_while_stmt .

    INT             reduce using rule 39 (statement -> do_while_stmt .)
    FLOAT           reduce using rule 39 (statement -> do_while_stmt .)
    VOID            reduce using rule 39 (statement -> do_while_stmt .)
    STRING          reduce using rule 39 (statement -> do_while_stmt .)
    $end            reduce using rule 39 (statement -> do_while_stmt .)
    WHILE           reduce using rule 39 (statement -> do_while_stmt .)
    SEMICOLON       reduce using rule 39 (statement -> do_while_stmt .)
    OBRACELET       reduce using rule 39 (statement -> do_while_stmt .)
    BREAK           reduce using rule 39 (statement -> do_while_stmt .)
    ID              reduce using rule 39 (statement -> do_while_stmt .)
    IF              reduce using rule 39 (statement -> do_while_stmt .)
    FOR             reduce using rule 39 (statement -> do_while_stmt .)
    DO              reduce using rule 39 (statement -> do_while_stmt .)
    NOTEQUAL        reduce using rule 39 (statement -> do_while_stmt .)
    PLUS            reduce using rule 39 (statement -> do_while_stmt .)
    MINUS           reduce using rule 39 (statement -> do_while_stmt .)
    LPAREN          reduce using rule 39 (statement -> do_while_stmt .)
    TRUE            reduce using rule 39 (statement -> do_while_stmt .)
    FALSE           reduce using rule 39 (statement -> do_while_stmt .)
    NUMBER          reduce using rule 39 (statement -> do_while_stmt .)
    FLOAT_NUMBER    reduce using rule 39 (statement -> do_while_stmt .)
    CBRACELET       reduce using rule 39 (statement -> do_while_stmt .)
    ELSE            reduce using rule 39 (statement -> do_while_stmt .)


state 49

    (40) statement -> break_stmt .

    INT             reduce using rule 40 (statement -> break_stmt .)
    FLOAT           reduce using rule 40 (statement -> break_stmt .)
    VOID            reduce using rule 40 (statement -> break_stmt .)
    STRING          reduce using rule 40 (statement -> break_stmt .)
    $end            reduce using rule 40 (statement -> break_stmt .)
    WHILE           reduce using rule 40 (statement -> break_stmt .)
    SEMICOLON       reduce using rule 40 (statement -> break_stmt .)
    OBRACELET       reduce using rule 40 (statement -> break_stmt .)
    BREAK           reduce using rule 40 (statement -> break_stmt .)
    ID              reduce using rule 40 (statement -> break_stmt .)
    IF              reduce using rule 40 (statement -> break_stmt .)
    FOR             reduce using rule 40 (statement -> break_stmt .)
    DO              reduce using rule 40 (statement -> break_stmt .)
    NOTEQUAL        reduce using rule 40 (statement -> break_stmt .)
    PLUS            reduce using rule 40 (statement -> break_stmt .)
    MINUS           reduce using rule 40 (statement -> break_stmt .)
    LPAREN          reduce using rule 40 (statement -> break_stmt .)
    TRUE            reduce using rule 40 (statement -> break_stmt .)
    FALSE           reduce using rule 40 (statement -> break_stmt .)
    NUMBER          reduce using rule 40 (statement -> break_stmt .)
    FLOAT_NUMBER    reduce using rule 40 (statement -> break_stmt .)
    CBRACELET       reduce using rule 40 (statement -> break_stmt .)
    ELSE            reduce using rule 40 (statement -> break_stmt .)


state 50

    (41) expression_stmt -> expression . SEMICOLON

    SEMICOLON       shift and go to state 87


state 51

    (42) expression_stmt -> SEMICOLON .

    INT             reduce using rule 42 (expression_stmt -> SEMICOLON .)
    FLOAT           reduce using rule 42 (expression_stmt -> SEMICOLON .)
    VOID            reduce using rule 42 (expression_stmt -> SEMICOLON .)
    STRING          reduce using rule 42 (expression_stmt -> SEMICOLON .)
    $end            reduce using rule 42 (expression_stmt -> SEMICOLON .)
    WHILE           reduce using rule 42 (expression_stmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 42 (expression_stmt -> SEMICOLON .)
    OBRACELET       reduce using rule 42 (expression_stmt -> SEMICOLON .)
    BREAK           reduce using rule 42 (expression_stmt -> SEMICOLON .)
    ID              reduce using rule 42 (expression_stmt -> SEMICOLON .)
    IF              reduce using rule 42 (expression_stmt -> SEMICOLON .)
    FOR             reduce using rule 42 (expression_stmt -> SEMICOLON .)
    DO              reduce using rule 42 (expression_stmt -> SEMICOLON .)
    NOTEQUAL        reduce using rule 42 (expression_stmt -> SEMICOLON .)
    PLUS            reduce using rule 42 (expression_stmt -> SEMICOLON .)
    MINUS           reduce using rule 42 (expression_stmt -> SEMICOLON .)
    LPAREN          reduce using rule 42 (expression_stmt -> SEMICOLON .)
    TRUE            reduce using rule 42 (expression_stmt -> SEMICOLON .)
    FALSE           reduce using rule 42 (expression_stmt -> SEMICOLON .)
    NUMBER          reduce using rule 42 (expression_stmt -> SEMICOLON .)
    FLOAT_NUMBER    reduce using rule 42 (expression_stmt -> SEMICOLON .)
    CBRACELET       reduce using rule 42 (expression_stmt -> SEMICOLON .)
    ELSE            reduce using rule 42 (expression_stmt -> SEMICOLON .)


state 52

    (29) compound_stmt -> OBRACELET . local_declarations statement_list local_declarations CBRACELET
    (30) local_declarations -> . local_declarations var_declaration
    (31) local_declarations -> .

    INT             reduce using rule 31 (local_declarations -> .)
    FLOAT           reduce using rule 31 (local_declarations -> .)
    VOID            reduce using rule 31 (local_declarations -> .)
    STRING          reduce using rule 31 (local_declarations -> .)
    SEMICOLON       reduce using rule 31 (local_declarations -> .)
    OBRACELET       reduce using rule 31 (local_declarations -> .)
    BREAK           reduce using rule 31 (local_declarations -> .)
    ID              reduce using rule 31 (local_declarations -> .)
    IF              reduce using rule 31 (local_declarations -> .)
    WHILE           reduce using rule 31 (local_declarations -> .)
    FOR             reduce using rule 31 (local_declarations -> .)
    DO              reduce using rule 31 (local_declarations -> .)
    NOTEQUAL        reduce using rule 31 (local_declarations -> .)
    PLUS            reduce using rule 31 (local_declarations -> .)
    MINUS           reduce using rule 31 (local_declarations -> .)
    LPAREN          reduce using rule 31 (local_declarations -> .)
    TRUE            reduce using rule 31 (local_declarations -> .)
    FALSE           reduce using rule 31 (local_declarations -> .)
    NUMBER          reduce using rule 31 (local_declarations -> .)
    FLOAT_NUMBER    reduce using rule 31 (local_declarations -> .)
    CBRACELET       reduce using rule 31 (local_declarations -> .)

    local_declarations             shift and go to state 88

state 53

    (45) if_stmt -> if . LPAREN expression RPAREN statement
    (46) if_stmt -> if . LPAREN expression RPAREN statement else statement

    LPAREN          shift and go to state 89


state 54

    (49) while_stmt -> while . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 90


state 55

    (51) for_stmt -> for . LPAREN var_declaration expression semicolon expression RPAREN statement

    LPAREN          shift and go to state 91


state 56

    (43) do_while_stmt -> do . statement while LPAREN expression RPAREN
    (34) statement -> . expression_stmt
    (35) statement -> . compound_stmt
    (36) statement -> . if_stmt
    (37) statement -> . while_stmt
    (38) statement -> . for_stmt
    (39) statement -> . do_while_stmt
    (40) statement -> . break_stmt
    (41) expression_stmt -> . expression SEMICOLON
    (42) expression_stmt -> . SEMICOLON
    (29) compound_stmt -> . OBRACELET local_declarations statement_list local_declarations CBRACELET
    (45) if_stmt -> . if LPAREN expression RPAREN statement
    (46) if_stmt -> . if LPAREN expression RPAREN statement else statement
    (49) while_stmt -> . while LPAREN expression RPAREN statement
    (51) for_stmt -> . for LPAREN var_declaration expression semicolon expression RPAREN statement
    (43) do_while_stmt -> . do statement while LPAREN expression RPAREN
    (54) break_stmt -> . BREAK SEMICOLON
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (47) if -> . IF
    (50) while -> . WHILE
    (53) for -> . FOR
    (44) do -> . DO
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    SEMICOLON       shift and go to state 51
    OBRACELET       shift and go to state 52
    BREAK           shift and go to state 57
    ID              shift and go to state 40
    IF              shift and go to state 60
    WHILE           shift and go to state 61
    FOR             shift and go to state 62
    DO              shift and go to state 63
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    do                             shift and go to state 56
    statement                      shift and go to state 92
    while                          shift and go to state 54
    expression                     shift and go to state 50
    expression_stmt                shift and go to state 43
    compound_stmt                  shift and go to state 44
    if_stmt                        shift and go to state 45
    while_stmt                     shift and go to state 46
    for_stmt                       shift and go to state 47
    do_while_stmt                  shift and go to state 48
    break_stmt                     shift and go to state 49
    if                             shift and go to state 53
    for                            shift and go to state 55
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 57

    (54) break_stmt -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 93


state 58

    (55) expression -> var . ASSIGN expression
    (56) expression -> var . addopration_expression expression
    (57) expression -> var . mulopration_expression expression
    (90) factor -> var .
    (61) addopration_expression -> . PLUS_ASSIGN
    (62) addopration_expression -> . MINUS_ASSIGN
    (63) mulopration_expression -> . TIMES_ASSIGN
    (64) mulopration_expression -> . DIVIDE_ASSIGN

    ASSIGN          shift and go to state 94
    TIMES           reduce using rule 90 (factor -> var .)
    DIVIDE          reduce using rule 90 (factor -> var .)
    EQUALS          reduce using rule 90 (factor -> var .)
    LESS            reduce using rule 90 (factor -> var .)
    LARGE           reduce using rule 90 (factor -> var .)
    LARGETHAN       reduce using rule 90 (factor -> var .)
    LESSTHAN        reduce using rule 90 (factor -> var .)
    NOTEQUAL        reduce using rule 90 (factor -> var .)
    PLUS            reduce using rule 90 (factor -> var .)
    MINUS           reduce using rule 90 (factor -> var .)
    AND             reduce using rule 90 (factor -> var .)
    SEMICOLON       reduce using rule 90 (factor -> var .)
    RPAREN          reduce using rule 90 (factor -> var .)
    COMMA           reduce using rule 90 (factor -> var .)
    PLUS_ASSIGN     shift and go to state 97
    MINUS_ASSIGN    shift and go to state 98
    TIMES_ASSIGN    shift and go to state 99
    DIVIDE_ASSIGN   shift and go to state 100

    addopration_expression         shift and go to state 95
    mulopration_expression         shift and go to state 96

state 59

    (60) expression -> simple_expression .
    (67) simple_expression -> simple_expression . AND unary_rel_expression

    SEMICOLON       reduce using rule 60 (expression -> simple_expression .)
    RPAREN          reduce using rule 60 (expression -> simple_expression .)
    COMMA           reduce using rule 60 (expression -> simple_expression .)
    AND             shift and go to state 101


state 60

    (47) if -> IF .

    LPAREN          reduce using rule 47 (if -> IF .)


state 61

    (50) while -> WHILE .

    LPAREN          reduce using rule 50 (while -> WHILE .)


state 62

    (53) for -> FOR .

    LPAREN          reduce using rule 53 (for -> FOR .)


state 63

    (44) do -> DO .

    SEMICOLON       reduce using rule 44 (do -> DO .)
    OBRACELET       reduce using rule 44 (do -> DO .)
    BREAK           reduce using rule 44 (do -> DO .)
    ID              reduce using rule 44 (do -> DO .)
    IF              reduce using rule 44 (do -> DO .)
    WHILE           reduce using rule 44 (do -> DO .)
    FOR             reduce using rule 44 (do -> DO .)
    DO              reduce using rule 44 (do -> DO .)
    NOTEQUAL        reduce using rule 44 (do -> DO .)
    PLUS            reduce using rule 44 (do -> DO .)
    MINUS           reduce using rule 44 (do -> DO .)
    LPAREN          reduce using rule 44 (do -> DO .)
    TRUE            reduce using rule 44 (do -> DO .)
    FALSE           reduce using rule 44 (do -> DO .)
    NUMBER          reduce using rule 44 (do -> DO .)
    FLOAT_NUMBER    reduce using rule 44 (do -> DO .)


state 64

    (95) constant -> NUMBER .

    TIMES           reduce using rule 95 (constant -> NUMBER .)
    DIVIDE          reduce using rule 95 (constant -> NUMBER .)
    EQUALS          reduce using rule 95 (constant -> NUMBER .)
    LESS            reduce using rule 95 (constant -> NUMBER .)
    LARGE           reduce using rule 95 (constant -> NUMBER .)
    LARGETHAN       reduce using rule 95 (constant -> NUMBER .)
    LESSTHAN        reduce using rule 95 (constant -> NUMBER .)
    NOTEQUAL        reduce using rule 95 (constant -> NUMBER .)
    PLUS            reduce using rule 95 (constant -> NUMBER .)
    MINUS           reduce using rule 95 (constant -> NUMBER .)
    AND             reduce using rule 95 (constant -> NUMBER .)
    SEMICOLON       reduce using rule 95 (constant -> NUMBER .)
    RPAREN          reduce using rule 95 (constant -> NUMBER .)
    COMMA           reduce using rule 95 (constant -> NUMBER .)


state 65

    (68) simple_expression -> unary_rel_expression .

    AND             reduce using rule 68 (simple_expression -> unary_rel_expression .)
    SEMICOLON       reduce using rule 68 (simple_expression -> unary_rel_expression .)
    RPAREN          reduce using rule 68 (simple_expression -> unary_rel_expression .)
    COMMA           reduce using rule 68 (simple_expression -> unary_rel_expression .)


state 66

    (69) unary_rel_expression -> NOTEQUAL . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    ID              shift and go to state 104
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    unary_rel_expression           shift and go to state 102
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    var                            shift and go to state 103
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 67

    (70) unary_rel_expression -> rel_expression .

    AND             reduce using rule 70 (unary_rel_expression -> rel_expression .)
    SEMICOLON       reduce using rule 70 (unary_rel_expression -> rel_expression .)
    RPAREN          reduce using rule 70 (unary_rel_expression -> rel_expression .)
    COMMA           reduce using rule 70 (unary_rel_expression -> rel_expression .)


state 68

    (71) rel_expression -> add_expression . relop add_expression
    (72) rel_expression -> add_expression .
    (79) add_expression -> add_expression . addop term
    (73) relop -> . EQUALS
    (74) relop -> . LESS
    (75) relop -> . LARGE
    (76) relop -> . LARGETHAN
    (77) relop -> . LESSTHAN
    (78) relop -> . NOTEQUAL
    (81) addop -> . PLUS
    (82) addop -> . MINUS

    AND             reduce using rule 72 (rel_expression -> add_expression .)
    SEMICOLON       reduce using rule 72 (rel_expression -> add_expression .)
    RPAREN          reduce using rule 72 (rel_expression -> add_expression .)
    COMMA           reduce using rule 72 (rel_expression -> add_expression .)
    EQUALS          shift and go to state 107
    LESS            shift and go to state 108
    LARGE           shift and go to state 109
    LARGETHAN       shift and go to state 110
    LESSTHAN        shift and go to state 111
    NOTEQUAL        shift and go to state 112
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    relop                          shift and go to state 105
    addop                          shift and go to state 106

state 69

    (87) unary_expression -> addop . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    ID              shift and go to state 104
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    addop                          shift and go to state 69
    unary_expression               shift and go to state 113
    factor                         shift and go to state 72
    var                            shift and go to state 103
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 70

    (80) add_expression -> term .
    (83) term -> term . mulop unary_expression
    (85) mulop -> . TIMES
    (86) mulop -> . DIVIDE

    EQUALS          reduce using rule 80 (add_expression -> term .)
    LESS            reduce using rule 80 (add_expression -> term .)
    LARGE           reduce using rule 80 (add_expression -> term .)
    LARGETHAN       reduce using rule 80 (add_expression -> term .)
    LESSTHAN        reduce using rule 80 (add_expression -> term .)
    NOTEQUAL        reduce using rule 80 (add_expression -> term .)
    PLUS            reduce using rule 80 (add_expression -> term .)
    MINUS           reduce using rule 80 (add_expression -> term .)
    AND             reduce using rule 80 (add_expression -> term .)
    SEMICOLON       reduce using rule 80 (add_expression -> term .)
    RPAREN          reduce using rule 80 (add_expression -> term .)
    COMMA           reduce using rule 80 (add_expression -> term .)
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116

    mulop                          shift and go to state 114

state 71

    (84) term -> unary_expression .

    TIMES           reduce using rule 84 (term -> unary_expression .)
    DIVIDE          reduce using rule 84 (term -> unary_expression .)
    EQUALS          reduce using rule 84 (term -> unary_expression .)
    LESS            reduce using rule 84 (term -> unary_expression .)
    LARGE           reduce using rule 84 (term -> unary_expression .)
    LARGETHAN       reduce using rule 84 (term -> unary_expression .)
    LESSTHAN        reduce using rule 84 (term -> unary_expression .)
    NOTEQUAL        reduce using rule 84 (term -> unary_expression .)
    PLUS            reduce using rule 84 (term -> unary_expression .)
    MINUS           reduce using rule 84 (term -> unary_expression .)
    AND             reduce using rule 84 (term -> unary_expression .)
    SEMICOLON       reduce using rule 84 (term -> unary_expression .)
    RPAREN          reduce using rule 84 (term -> unary_expression .)
    COMMA           reduce using rule 84 (term -> unary_expression .)


state 72

    (88) unary_expression -> factor .

    TIMES           reduce using rule 88 (unary_expression -> factor .)
    DIVIDE          reduce using rule 88 (unary_expression -> factor .)
    EQUALS          reduce using rule 88 (unary_expression -> factor .)
    LESS            reduce using rule 88 (unary_expression -> factor .)
    LARGE           reduce using rule 88 (unary_expression -> factor .)
    LARGETHAN       reduce using rule 88 (unary_expression -> factor .)
    LESSTHAN        reduce using rule 88 (unary_expression -> factor .)
    NOTEQUAL        reduce using rule 88 (unary_expression -> factor .)
    PLUS            reduce using rule 88 (unary_expression -> factor .)
    MINUS           reduce using rule 88 (unary_expression -> factor .)
    AND             reduce using rule 88 (unary_expression -> factor .)
    SEMICOLON       reduce using rule 88 (unary_expression -> factor .)
    RPAREN          reduce using rule 88 (unary_expression -> factor .)
    COMMA           reduce using rule 88 (unary_expression -> factor .)


state 73

    (81) addop -> PLUS .

    PLUS            reduce using rule 81 (addop -> PLUS .)
    MINUS           reduce using rule 81 (addop -> PLUS .)
    LPAREN          reduce using rule 81 (addop -> PLUS .)
    ID              reduce using rule 81 (addop -> PLUS .)
    TRUE            reduce using rule 81 (addop -> PLUS .)
    FALSE           reduce using rule 81 (addop -> PLUS .)
    NUMBER          reduce using rule 81 (addop -> PLUS .)
    FLOAT_NUMBER    reduce using rule 81 (addop -> PLUS .)


state 74

    (82) addop -> MINUS .

    PLUS            reduce using rule 82 (addop -> MINUS .)
    MINUS           reduce using rule 82 (addop -> MINUS .)
    LPAREN          reduce using rule 82 (addop -> MINUS .)
    ID              reduce using rule 82 (addop -> MINUS .)
    TRUE            reduce using rule 82 (addop -> MINUS .)
    FALSE           reduce using rule 82 (addop -> MINUS .)
    NUMBER          reduce using rule 82 (addop -> MINUS .)
    FLOAT_NUMBER    reduce using rule 82 (addop -> MINUS .)


state 75

    (91) factor -> call .

    TIMES           reduce using rule 91 (factor -> call .)
    DIVIDE          reduce using rule 91 (factor -> call .)
    EQUALS          reduce using rule 91 (factor -> call .)
    LESS            reduce using rule 91 (factor -> call .)
    LARGE           reduce using rule 91 (factor -> call .)
    LARGETHAN       reduce using rule 91 (factor -> call .)
    LESSTHAN        reduce using rule 91 (factor -> call .)
    NOTEQUAL        reduce using rule 91 (factor -> call .)
    PLUS            reduce using rule 91 (factor -> call .)
    MINUS           reduce using rule 91 (factor -> call .)
    AND             reduce using rule 91 (factor -> call .)
    SEMICOLON       reduce using rule 91 (factor -> call .)
    RPAREN          reduce using rule 91 (factor -> call .)
    COMMA           reduce using rule 91 (factor -> call .)


state 76

    (92) factor -> constant .

    TIMES           reduce using rule 92 (factor -> constant .)
    DIVIDE          reduce using rule 92 (factor -> constant .)
    EQUALS          reduce using rule 92 (factor -> constant .)
    LESS            reduce using rule 92 (factor -> constant .)
    LARGE           reduce using rule 92 (factor -> constant .)
    LARGETHAN       reduce using rule 92 (factor -> constant .)
    LESSTHAN        reduce using rule 92 (factor -> constant .)
    NOTEQUAL        reduce using rule 92 (factor -> constant .)
    PLUS            reduce using rule 92 (factor -> constant .)
    MINUS           reduce using rule 92 (factor -> constant .)
    AND             reduce using rule 92 (factor -> constant .)
    SEMICOLON       reduce using rule 92 (factor -> constant .)
    RPAREN          reduce using rule 92 (factor -> constant .)
    COMMA           reduce using rule 92 (factor -> constant .)


state 77

    (93) constant -> TRUE .

    TIMES           reduce using rule 93 (constant -> TRUE .)
    DIVIDE          reduce using rule 93 (constant -> TRUE .)
    EQUALS          reduce using rule 93 (constant -> TRUE .)
    LESS            reduce using rule 93 (constant -> TRUE .)
    LARGE           reduce using rule 93 (constant -> TRUE .)
    LARGETHAN       reduce using rule 93 (constant -> TRUE .)
    LESSTHAN        reduce using rule 93 (constant -> TRUE .)
    NOTEQUAL        reduce using rule 93 (constant -> TRUE .)
    PLUS            reduce using rule 93 (constant -> TRUE .)
    MINUS           reduce using rule 93 (constant -> TRUE .)
    AND             reduce using rule 93 (constant -> TRUE .)
    SEMICOLON       reduce using rule 93 (constant -> TRUE .)
    RPAREN          reduce using rule 93 (constant -> TRUE .)
    COMMA           reduce using rule 93 (constant -> TRUE .)


state 78

    (94) constant -> FALSE .

    TIMES           reduce using rule 94 (constant -> FALSE .)
    DIVIDE          reduce using rule 94 (constant -> FALSE .)
    EQUALS          reduce using rule 94 (constant -> FALSE .)
    LESS            reduce using rule 94 (constant -> FALSE .)
    LARGE           reduce using rule 94 (constant -> FALSE .)
    LARGETHAN       reduce using rule 94 (constant -> FALSE .)
    LESSTHAN        reduce using rule 94 (constant -> FALSE .)
    NOTEQUAL        reduce using rule 94 (constant -> FALSE .)
    PLUS            reduce using rule 94 (constant -> FALSE .)
    MINUS           reduce using rule 94 (constant -> FALSE .)
    AND             reduce using rule 94 (constant -> FALSE .)
    SEMICOLON       reduce using rule 94 (constant -> FALSE .)
    RPAREN          reduce using rule 94 (constant -> FALSE .)
    COMMA           reduce using rule 94 (constant -> FALSE .)


state 79

    (96) constant -> FLOAT_NUMBER .

    TIMES           reduce using rule 96 (constant -> FLOAT_NUMBER .)
    DIVIDE          reduce using rule 96 (constant -> FLOAT_NUMBER .)
    EQUALS          reduce using rule 96 (constant -> FLOAT_NUMBER .)
    LESS            reduce using rule 96 (constant -> FLOAT_NUMBER .)
    LARGE           reduce using rule 96 (constant -> FLOAT_NUMBER .)
    LARGETHAN       reduce using rule 96 (constant -> FLOAT_NUMBER .)
    LESSTHAN        reduce using rule 96 (constant -> FLOAT_NUMBER .)
    NOTEQUAL        reduce using rule 96 (constant -> FLOAT_NUMBER .)
    PLUS            reduce using rule 96 (constant -> FLOAT_NUMBER .)
    MINUS           reduce using rule 96 (constant -> FLOAT_NUMBER .)
    AND             reduce using rule 96 (constant -> FLOAT_NUMBER .)
    SEMICOLON       reduce using rule 96 (constant -> FLOAT_NUMBER .)
    RPAREN          reduce using rule 96 (constant -> FLOAT_NUMBER .)
    COMMA           reduce using rule 96 (constant -> FLOAT_NUMBER .)


state 80

    (23) param_list -> param_list COMMA param_type_list .

    COMMA           reduce using rule 23 (param_list -> param_list COMMA param_type_list .)
    RPAREN          reduce using rule 23 (param_list -> param_list COMMA param_type_list .)


state 81

    (26) param_id_list -> param_id_list COMMA param_id .

    COMMA           reduce using rule 26 (param_id_list -> param_id_list COMMA param_id .)
    RPAREN          reduce using rule 26 (param_id_list -> param_id_list COMMA param_id .)


state 82

    (58) expression -> ID PLUSPLUS .

    SEMICOLON       reduce using rule 58 (expression -> ID PLUSPLUS .)
    RPAREN          reduce using rule 58 (expression -> ID PLUSPLUS .)
    COMMA           reduce using rule 58 (expression -> ID PLUSPLUS .)


state 83

    (59) expression -> ID MINUSMINUS .

    SEMICOLON       reduce using rule 59 (expression -> ID MINUSMINUS .)
    RPAREN          reduce using rule 59 (expression -> ID MINUSMINUS .)
    COMMA           reduce using rule 59 (expression -> ID MINUSMINUS .)


state 84

    (66) var -> ID OPENBR . NUMBER CLOSEBR

    NUMBER          shift and go to state 117


state 85

    (97) call -> ID LPAREN . args RPAREN
    (98) args -> . args_list
    (99) args -> .
    (100) args_list -> . args_list COMMA expression
    (101) args_list -> . expression
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    RPAREN          reduce using rule 99 (args -> .)
    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    args                           shift and go to state 118
    args_list                      shift and go to state 119
    expression                     shift and go to state 120
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 86

    (89) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 121


state 87

    (41) expression_stmt -> expression SEMICOLON .

    INT             reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    FLOAT           reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    VOID            reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    STRING          reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    $end            reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    WHILE           reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    SEMICOLON       reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    OBRACELET       reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    BREAK           reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    ID              reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    IF              reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    FOR             reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    DO              reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    NOTEQUAL        reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    PLUS            reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    MINUS           reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    LPAREN          reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    TRUE            reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    FALSE           reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    NUMBER          reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    FLOAT_NUMBER    reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    CBRACELET       reduce using rule 41 (expression_stmt -> expression SEMICOLON .)
    ELSE            reduce using rule 41 (expression_stmt -> expression SEMICOLON .)


state 88

    (29) compound_stmt -> OBRACELET local_declarations . statement_list local_declarations CBRACELET
    (30) local_declarations -> local_declarations . var_declaration
    (32) statement_list -> . statement statement_list
    (33) statement_list -> .
    (6) var_declaration -> . type_specifier var_decl_list SEMICOLON
    (7) var_declaration -> . type_specifier error SEMICOLON
    (34) statement -> . expression_stmt
    (35) statement -> . compound_stmt
    (36) statement -> . if_stmt
    (37) statement -> . while_stmt
    (38) statement -> . for_stmt
    (39) statement -> . do_while_stmt
    (40) statement -> . break_stmt
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (18) type_specifier -> . VOID
    (19) type_specifier -> . STRING
    (41) expression_stmt -> . expression SEMICOLON
    (42) expression_stmt -> . SEMICOLON
    (29) compound_stmt -> . OBRACELET local_declarations statement_list local_declarations CBRACELET
    (45) if_stmt -> . if LPAREN expression RPAREN statement
    (46) if_stmt -> . if LPAREN expression RPAREN statement else statement
    (49) while_stmt -> . while LPAREN expression RPAREN statement
    (51) for_stmt -> . for LPAREN var_declaration expression semicolon expression RPAREN statement
    (43) do_while_stmt -> . do statement while LPAREN expression RPAREN
    (54) break_stmt -> . BREAK SEMICOLON
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (47) if -> . IF
    (50) while -> . WHILE
    (53) for -> . FOR
    (44) do -> . DO
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    CBRACELET       reduce using rule 33 (statement_list -> .)
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    STRING          shift and go to state 10
    SEMICOLON       shift and go to state 51
    OBRACELET       shift and go to state 52
    BREAK           shift and go to state 57
    ID              shift and go to state 40
    IF              shift and go to state 60
    WHILE           shift and go to state 61
    FOR             shift and go to state 62
    DO              shift and go to state 63
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

  ! INT             [ reduce using rule 33 (statement_list -> .) ]
  ! FLOAT           [ reduce using rule 33 (statement_list -> .) ]
  ! VOID            [ reduce using rule 33 (statement_list -> .) ]
  ! STRING          [ reduce using rule 33 (statement_list -> .) ]

    statement_list                 shift and go to state 122
    var_declaration                shift and go to state 123
    statement                      shift and go to state 124
    type_specifier                 shift and go to state 125
    expression_stmt                shift and go to state 43
    compound_stmt                  shift and go to state 44
    if_stmt                        shift and go to state 45
    while_stmt                     shift and go to state 46
    for_stmt                       shift and go to state 47
    do_while_stmt                  shift and go to state 48
    break_stmt                     shift and go to state 49
    expression                     shift and go to state 50
    if                             shift and go to state 53
    while                          shift and go to state 54
    for                            shift and go to state 55
    do                             shift and go to state 56
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 89

    (45) if_stmt -> if LPAREN . expression RPAREN statement
    (46) if_stmt -> if LPAREN . expression RPAREN statement else statement
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    expression                     shift and go to state 126
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 90

    (49) while_stmt -> while LPAREN . expression RPAREN statement
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    expression                     shift and go to state 127
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 91

    (51) for_stmt -> for LPAREN . var_declaration expression semicolon expression RPAREN statement
    (6) var_declaration -> . type_specifier var_decl_list SEMICOLON
    (7) var_declaration -> . type_specifier error SEMICOLON
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (18) type_specifier -> . VOID
    (19) type_specifier -> . STRING

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    STRING          shift and go to state 10

    var_declaration                shift and go to state 128
    type_specifier                 shift and go to state 125

state 92

    (43) do_while_stmt -> do statement . while LPAREN expression RPAREN
    (50) while -> . WHILE

    WHILE           shift and go to state 61

    while                          shift and go to state 129

state 93

    (54) break_stmt -> BREAK SEMICOLON .

    INT             reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    FLOAT           reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    VOID            reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    STRING          reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    $end            reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    WHILE           reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    OBRACELET       reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    BREAK           reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    ID              reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    IF              reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    FOR             reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    DO              reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    NOTEQUAL        reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    PLUS            reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    MINUS           reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    TRUE            reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    FALSE           reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    NUMBER          reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    FLOAT_NUMBER    reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    CBRACELET       reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)
    ELSE            reduce using rule 54 (break_stmt -> BREAK SEMICOLON .)


state 94

    (55) expression -> var ASSIGN . expression
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    var                            shift and go to state 58
    expression                     shift and go to state 130
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 95

    (56) expression -> var addopration_expression . expression
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    var                            shift and go to state 58
    expression                     shift and go to state 131
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 96

    (57) expression -> var mulopration_expression . expression
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    var                            shift and go to state 58
    expression                     shift and go to state 132
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 97

    (61) addopration_expression -> PLUS_ASSIGN .

    ID              reduce using rule 61 (addopration_expression -> PLUS_ASSIGN .)
    NOTEQUAL        reduce using rule 61 (addopration_expression -> PLUS_ASSIGN .)
    PLUS            reduce using rule 61 (addopration_expression -> PLUS_ASSIGN .)
    MINUS           reduce using rule 61 (addopration_expression -> PLUS_ASSIGN .)
    LPAREN          reduce using rule 61 (addopration_expression -> PLUS_ASSIGN .)
    TRUE            reduce using rule 61 (addopration_expression -> PLUS_ASSIGN .)
    FALSE           reduce using rule 61 (addopration_expression -> PLUS_ASSIGN .)
    NUMBER          reduce using rule 61 (addopration_expression -> PLUS_ASSIGN .)
    FLOAT_NUMBER    reduce using rule 61 (addopration_expression -> PLUS_ASSIGN .)


state 98

    (62) addopration_expression -> MINUS_ASSIGN .

    ID              reduce using rule 62 (addopration_expression -> MINUS_ASSIGN .)
    NOTEQUAL        reduce using rule 62 (addopration_expression -> MINUS_ASSIGN .)
    PLUS            reduce using rule 62 (addopration_expression -> MINUS_ASSIGN .)
    MINUS           reduce using rule 62 (addopration_expression -> MINUS_ASSIGN .)
    LPAREN          reduce using rule 62 (addopration_expression -> MINUS_ASSIGN .)
    TRUE            reduce using rule 62 (addopration_expression -> MINUS_ASSIGN .)
    FALSE           reduce using rule 62 (addopration_expression -> MINUS_ASSIGN .)
    NUMBER          reduce using rule 62 (addopration_expression -> MINUS_ASSIGN .)
    FLOAT_NUMBER    reduce using rule 62 (addopration_expression -> MINUS_ASSIGN .)


state 99

    (63) mulopration_expression -> TIMES_ASSIGN .

    ID              reduce using rule 63 (mulopration_expression -> TIMES_ASSIGN .)
    NOTEQUAL        reduce using rule 63 (mulopration_expression -> TIMES_ASSIGN .)
    PLUS            reduce using rule 63 (mulopration_expression -> TIMES_ASSIGN .)
    MINUS           reduce using rule 63 (mulopration_expression -> TIMES_ASSIGN .)
    LPAREN          reduce using rule 63 (mulopration_expression -> TIMES_ASSIGN .)
    TRUE            reduce using rule 63 (mulopration_expression -> TIMES_ASSIGN .)
    FALSE           reduce using rule 63 (mulopration_expression -> TIMES_ASSIGN .)
    NUMBER          reduce using rule 63 (mulopration_expression -> TIMES_ASSIGN .)
    FLOAT_NUMBER    reduce using rule 63 (mulopration_expression -> TIMES_ASSIGN .)


state 100

    (64) mulopration_expression -> DIVIDE_ASSIGN .

    ID              reduce using rule 64 (mulopration_expression -> DIVIDE_ASSIGN .)
    NOTEQUAL        reduce using rule 64 (mulopration_expression -> DIVIDE_ASSIGN .)
    PLUS            reduce using rule 64 (mulopration_expression -> DIVIDE_ASSIGN .)
    MINUS           reduce using rule 64 (mulopration_expression -> DIVIDE_ASSIGN .)
    LPAREN          reduce using rule 64 (mulopration_expression -> DIVIDE_ASSIGN .)
    TRUE            reduce using rule 64 (mulopration_expression -> DIVIDE_ASSIGN .)
    FALSE           reduce using rule 64 (mulopration_expression -> DIVIDE_ASSIGN .)
    NUMBER          reduce using rule 64 (mulopration_expression -> DIVIDE_ASSIGN .)
    FLOAT_NUMBER    reduce using rule 64 (mulopration_expression -> DIVIDE_ASSIGN .)


state 101

    (67) simple_expression -> simple_expression AND . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    ID              shift and go to state 104
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    unary_rel_expression           shift and go to state 133
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    var                            shift and go to state 103
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 102

    (69) unary_rel_expression -> NOTEQUAL unary_rel_expression .

    AND             reduce using rule 69 (unary_rel_expression -> NOTEQUAL unary_rel_expression .)
    SEMICOLON       reduce using rule 69 (unary_rel_expression -> NOTEQUAL unary_rel_expression .)
    RPAREN          reduce using rule 69 (unary_rel_expression -> NOTEQUAL unary_rel_expression .)
    COMMA           reduce using rule 69 (unary_rel_expression -> NOTEQUAL unary_rel_expression .)


state 103

    (90) factor -> var .

    TIMES           reduce using rule 90 (factor -> var .)
    DIVIDE          reduce using rule 90 (factor -> var .)
    EQUALS          reduce using rule 90 (factor -> var .)
    LESS            reduce using rule 90 (factor -> var .)
    LARGE           reduce using rule 90 (factor -> var .)
    LARGETHAN       reduce using rule 90 (factor -> var .)
    LESSTHAN        reduce using rule 90 (factor -> var .)
    NOTEQUAL        reduce using rule 90 (factor -> var .)
    PLUS            reduce using rule 90 (factor -> var .)
    MINUS           reduce using rule 90 (factor -> var .)
    AND             reduce using rule 90 (factor -> var .)
    SEMICOLON       reduce using rule 90 (factor -> var .)
    RPAREN          reduce using rule 90 (factor -> var .)
    COMMA           reduce using rule 90 (factor -> var .)


state 104

    (65) var -> ID .
    (66) var -> ID . OPENBR NUMBER CLOSEBR
    (97) call -> ID . LPAREN args RPAREN

    TIMES           reduce using rule 65 (var -> ID .)
    DIVIDE          reduce using rule 65 (var -> ID .)
    EQUALS          reduce using rule 65 (var -> ID .)
    LESS            reduce using rule 65 (var -> ID .)
    LARGE           reduce using rule 65 (var -> ID .)
    LARGETHAN       reduce using rule 65 (var -> ID .)
    LESSTHAN        reduce using rule 65 (var -> ID .)
    NOTEQUAL        reduce using rule 65 (var -> ID .)
    PLUS            reduce using rule 65 (var -> ID .)
    MINUS           reduce using rule 65 (var -> ID .)
    AND             reduce using rule 65 (var -> ID .)
    SEMICOLON       reduce using rule 65 (var -> ID .)
    RPAREN          reduce using rule 65 (var -> ID .)
    COMMA           reduce using rule 65 (var -> ID .)
    OPENBR          shift and go to state 84
    LPAREN          shift and go to state 85


state 105

    (71) rel_expression -> add_expression relop . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    ID              shift and go to state 104
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    add_expression                 shift and go to state 134
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    var                            shift and go to state 103
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 106

    (79) add_expression -> add_expression addop . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    ID              shift and go to state 104
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    addop                          shift and go to state 69
    term                           shift and go to state 135
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    var                            shift and go to state 103
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 107

    (73) relop -> EQUALS .

    PLUS            reduce using rule 73 (relop -> EQUALS .)
    MINUS           reduce using rule 73 (relop -> EQUALS .)
    LPAREN          reduce using rule 73 (relop -> EQUALS .)
    ID              reduce using rule 73 (relop -> EQUALS .)
    TRUE            reduce using rule 73 (relop -> EQUALS .)
    FALSE           reduce using rule 73 (relop -> EQUALS .)
    NUMBER          reduce using rule 73 (relop -> EQUALS .)
    FLOAT_NUMBER    reduce using rule 73 (relop -> EQUALS .)


state 108

    (74) relop -> LESS .

    PLUS            reduce using rule 74 (relop -> LESS .)
    MINUS           reduce using rule 74 (relop -> LESS .)
    LPAREN          reduce using rule 74 (relop -> LESS .)
    ID              reduce using rule 74 (relop -> LESS .)
    TRUE            reduce using rule 74 (relop -> LESS .)
    FALSE           reduce using rule 74 (relop -> LESS .)
    NUMBER          reduce using rule 74 (relop -> LESS .)
    FLOAT_NUMBER    reduce using rule 74 (relop -> LESS .)


state 109

    (75) relop -> LARGE .

    PLUS            reduce using rule 75 (relop -> LARGE .)
    MINUS           reduce using rule 75 (relop -> LARGE .)
    LPAREN          reduce using rule 75 (relop -> LARGE .)
    ID              reduce using rule 75 (relop -> LARGE .)
    TRUE            reduce using rule 75 (relop -> LARGE .)
    FALSE           reduce using rule 75 (relop -> LARGE .)
    NUMBER          reduce using rule 75 (relop -> LARGE .)
    FLOAT_NUMBER    reduce using rule 75 (relop -> LARGE .)


state 110

    (76) relop -> LARGETHAN .

    PLUS            reduce using rule 76 (relop -> LARGETHAN .)
    MINUS           reduce using rule 76 (relop -> LARGETHAN .)
    LPAREN          reduce using rule 76 (relop -> LARGETHAN .)
    ID              reduce using rule 76 (relop -> LARGETHAN .)
    TRUE            reduce using rule 76 (relop -> LARGETHAN .)
    FALSE           reduce using rule 76 (relop -> LARGETHAN .)
    NUMBER          reduce using rule 76 (relop -> LARGETHAN .)
    FLOAT_NUMBER    reduce using rule 76 (relop -> LARGETHAN .)


state 111

    (77) relop -> LESSTHAN .

    PLUS            reduce using rule 77 (relop -> LESSTHAN .)
    MINUS           reduce using rule 77 (relop -> LESSTHAN .)
    LPAREN          reduce using rule 77 (relop -> LESSTHAN .)
    ID              reduce using rule 77 (relop -> LESSTHAN .)
    TRUE            reduce using rule 77 (relop -> LESSTHAN .)
    FALSE           reduce using rule 77 (relop -> LESSTHAN .)
    NUMBER          reduce using rule 77 (relop -> LESSTHAN .)
    FLOAT_NUMBER    reduce using rule 77 (relop -> LESSTHAN .)


state 112

    (78) relop -> NOTEQUAL .

    PLUS            reduce using rule 78 (relop -> NOTEQUAL .)
    MINUS           reduce using rule 78 (relop -> NOTEQUAL .)
    LPAREN          reduce using rule 78 (relop -> NOTEQUAL .)
    ID              reduce using rule 78 (relop -> NOTEQUAL .)
    TRUE            reduce using rule 78 (relop -> NOTEQUAL .)
    FALSE           reduce using rule 78 (relop -> NOTEQUAL .)
    NUMBER          reduce using rule 78 (relop -> NOTEQUAL .)
    FLOAT_NUMBER    reduce using rule 78 (relop -> NOTEQUAL .)


state 113

    (87) unary_expression -> addop unary_expression .

    TIMES           reduce using rule 87 (unary_expression -> addop unary_expression .)
    DIVIDE          reduce using rule 87 (unary_expression -> addop unary_expression .)
    EQUALS          reduce using rule 87 (unary_expression -> addop unary_expression .)
    LESS            reduce using rule 87 (unary_expression -> addop unary_expression .)
    LARGE           reduce using rule 87 (unary_expression -> addop unary_expression .)
    LARGETHAN       reduce using rule 87 (unary_expression -> addop unary_expression .)
    LESSTHAN        reduce using rule 87 (unary_expression -> addop unary_expression .)
    NOTEQUAL        reduce using rule 87 (unary_expression -> addop unary_expression .)
    PLUS            reduce using rule 87 (unary_expression -> addop unary_expression .)
    MINUS           reduce using rule 87 (unary_expression -> addop unary_expression .)
    AND             reduce using rule 87 (unary_expression -> addop unary_expression .)
    SEMICOLON       reduce using rule 87 (unary_expression -> addop unary_expression .)
    RPAREN          reduce using rule 87 (unary_expression -> addop unary_expression .)
    COMMA           reduce using rule 87 (unary_expression -> addop unary_expression .)


state 114

    (83) term -> term mulop . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    ID              shift and go to state 104
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    unary_expression               shift and go to state 136
    addop                          shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 103
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 115

    (85) mulop -> TIMES .

    PLUS            reduce using rule 85 (mulop -> TIMES .)
    MINUS           reduce using rule 85 (mulop -> TIMES .)
    LPAREN          reduce using rule 85 (mulop -> TIMES .)
    ID              reduce using rule 85 (mulop -> TIMES .)
    TRUE            reduce using rule 85 (mulop -> TIMES .)
    FALSE           reduce using rule 85 (mulop -> TIMES .)
    NUMBER          reduce using rule 85 (mulop -> TIMES .)
    FLOAT_NUMBER    reduce using rule 85 (mulop -> TIMES .)


state 116

    (86) mulop -> DIVIDE .

    PLUS            reduce using rule 86 (mulop -> DIVIDE .)
    MINUS           reduce using rule 86 (mulop -> DIVIDE .)
    LPAREN          reduce using rule 86 (mulop -> DIVIDE .)
    ID              reduce using rule 86 (mulop -> DIVIDE .)
    TRUE            reduce using rule 86 (mulop -> DIVIDE .)
    FALSE           reduce using rule 86 (mulop -> DIVIDE .)
    NUMBER          reduce using rule 86 (mulop -> DIVIDE .)
    FLOAT_NUMBER    reduce using rule 86 (mulop -> DIVIDE .)


state 117

    (66) var -> ID OPENBR NUMBER . CLOSEBR

    CLOSEBR         shift and go to state 137


state 118

    (97) call -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 138


state 119

    (98) args -> args_list .
    (100) args_list -> args_list . COMMA expression

    RPAREN          reduce using rule 98 (args -> args_list .)
    COMMA           shift and go to state 139


state 120

    (101) args_list -> expression .

    COMMA           reduce using rule 101 (args_list -> expression .)
    RPAREN          reduce using rule 101 (args_list -> expression .)


state 121

    (89) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    LARGE           reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    LARGETHAN       reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 89 (factor -> LPAREN expression RPAREN .)


state 122

    (29) compound_stmt -> OBRACELET local_declarations statement_list . local_declarations CBRACELET
    (30) local_declarations -> . local_declarations var_declaration
    (31) local_declarations -> .

    CBRACELET       reduce using rule 31 (local_declarations -> .)
    INT             reduce using rule 31 (local_declarations -> .)
    FLOAT           reduce using rule 31 (local_declarations -> .)
    VOID            reduce using rule 31 (local_declarations -> .)
    STRING          reduce using rule 31 (local_declarations -> .)

    local_declarations             shift and go to state 140

state 123

    (30) local_declarations -> local_declarations var_declaration .

    INT             reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    FLOAT           reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    VOID            reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    STRING          reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    SEMICOLON       reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    OBRACELET       reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    BREAK           reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    ID              reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    DO              reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    NOTEQUAL        reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    PLUS            reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    MINUS           reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    LPAREN          reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    TRUE            reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    FALSE           reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    NUMBER          reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    FLOAT_NUMBER    reduce using rule 30 (local_declarations -> local_declarations var_declaration .)
    CBRACELET       reduce using rule 30 (local_declarations -> local_declarations var_declaration .)


state 124

    (32) statement_list -> statement . statement_list
    (32) statement_list -> . statement statement_list
    (33) statement_list -> .
    (34) statement -> . expression_stmt
    (35) statement -> . compound_stmt
    (36) statement -> . if_stmt
    (37) statement -> . while_stmt
    (38) statement -> . for_stmt
    (39) statement -> . do_while_stmt
    (40) statement -> . break_stmt
    (41) expression_stmt -> . expression SEMICOLON
    (42) expression_stmt -> . SEMICOLON
    (29) compound_stmt -> . OBRACELET local_declarations statement_list local_declarations CBRACELET
    (45) if_stmt -> . if LPAREN expression RPAREN statement
    (46) if_stmt -> . if LPAREN expression RPAREN statement else statement
    (49) while_stmt -> . while LPAREN expression RPAREN statement
    (51) for_stmt -> . for LPAREN var_declaration expression semicolon expression RPAREN statement
    (43) do_while_stmt -> . do statement while LPAREN expression RPAREN
    (54) break_stmt -> . BREAK SEMICOLON
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (47) if -> . IF
    (50) while -> . WHILE
    (53) for -> . FOR
    (44) do -> . DO
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    CBRACELET       reduce using rule 33 (statement_list -> .)
    INT             reduce using rule 33 (statement_list -> .)
    FLOAT           reduce using rule 33 (statement_list -> .)
    VOID            reduce using rule 33 (statement_list -> .)
    STRING          reduce using rule 33 (statement_list -> .)
    SEMICOLON       shift and go to state 51
    OBRACELET       shift and go to state 52
    BREAK           shift and go to state 57
    ID              shift and go to state 40
    IF              shift and go to state 60
    WHILE           shift and go to state 61
    FOR             shift and go to state 62
    DO              shift and go to state 63
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    statement                      shift and go to state 124
    statement_list                 shift and go to state 141
    expression_stmt                shift and go to state 43
    compound_stmt                  shift and go to state 44
    if_stmt                        shift and go to state 45
    while_stmt                     shift and go to state 46
    for_stmt                       shift and go to state 47
    do_while_stmt                  shift and go to state 48
    break_stmt                     shift and go to state 49
    expression                     shift and go to state 50
    if                             shift and go to state 53
    while                          shift and go to state 54
    for                            shift and go to state 55
    do                             shift and go to state 56
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 125

    (6) var_declaration -> type_specifier . var_decl_list SEMICOLON
    (7) var_declaration -> type_specifier . error SEMICOLON
    (8) var_decl_list -> . var_decl_list COMMA var_decl_id
    (9) var_decl_list -> . var_decl_id
    (10) var_decl_id -> . ID
    (11) var_decl_id -> . ID OPENBR NUMBER CLOSEBR
    (12) var_decl_id -> . ID ASSIGN ID
    (13) var_decl_id -> . ID ASSIGN NUMBER
    (14) var_decl_id -> . ID ASSIGN FLOAT_NUMBER
    (15) var_decl_id -> . ID ASSIGN STRING

    error           shift and go to state 13
    ID              shift and go to state 23

    var_decl_list                  shift and go to state 12
    var_decl_id                    shift and go to state 15

state 126

    (45) if_stmt -> if LPAREN expression . RPAREN statement
    (46) if_stmt -> if LPAREN expression . RPAREN statement else statement

    RPAREN          shift and go to state 142


state 127

    (49) while_stmt -> while LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 143


state 128

    (51) for_stmt -> for LPAREN var_declaration . expression semicolon expression RPAREN statement
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    expression                     shift and go to state 144
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 129

    (43) do_while_stmt -> do statement while . LPAREN expression RPAREN

    LPAREN          shift and go to state 145


state 130

    (55) expression -> var ASSIGN expression .

    SEMICOLON       reduce using rule 55 (expression -> var ASSIGN expression .)
    RPAREN          reduce using rule 55 (expression -> var ASSIGN expression .)
    COMMA           reduce using rule 55 (expression -> var ASSIGN expression .)


state 131

    (56) expression -> var addopration_expression expression .

    SEMICOLON       reduce using rule 56 (expression -> var addopration_expression expression .)
    RPAREN          reduce using rule 56 (expression -> var addopration_expression expression .)
    COMMA           reduce using rule 56 (expression -> var addopration_expression expression .)


state 132

    (57) expression -> var mulopration_expression expression .

    SEMICOLON       reduce using rule 57 (expression -> var mulopration_expression expression .)
    RPAREN          reduce using rule 57 (expression -> var mulopration_expression expression .)
    COMMA           reduce using rule 57 (expression -> var mulopration_expression expression .)


state 133

    (67) simple_expression -> simple_expression AND unary_rel_expression .

    AND             reduce using rule 67 (simple_expression -> simple_expression AND unary_rel_expression .)
    SEMICOLON       reduce using rule 67 (simple_expression -> simple_expression AND unary_rel_expression .)
    RPAREN          reduce using rule 67 (simple_expression -> simple_expression AND unary_rel_expression .)
    COMMA           reduce using rule 67 (simple_expression -> simple_expression AND unary_rel_expression .)


state 134

    (71) rel_expression -> add_expression relop add_expression .
    (79) add_expression -> add_expression . addop term
    (81) addop -> . PLUS
    (82) addop -> . MINUS

    AND             reduce using rule 71 (rel_expression -> add_expression relop add_expression .)
    SEMICOLON       reduce using rule 71 (rel_expression -> add_expression relop add_expression .)
    RPAREN          reduce using rule 71 (rel_expression -> add_expression relop add_expression .)
    COMMA           reduce using rule 71 (rel_expression -> add_expression relop add_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addop                          shift and go to state 106

state 135

    (79) add_expression -> add_expression addop term .
    (83) term -> term . mulop unary_expression
    (85) mulop -> . TIMES
    (86) mulop -> . DIVIDE

    EQUALS          reduce using rule 79 (add_expression -> add_expression addop term .)
    LESS            reduce using rule 79 (add_expression -> add_expression addop term .)
    LARGE           reduce using rule 79 (add_expression -> add_expression addop term .)
    LARGETHAN       reduce using rule 79 (add_expression -> add_expression addop term .)
    LESSTHAN        reduce using rule 79 (add_expression -> add_expression addop term .)
    NOTEQUAL        reduce using rule 79 (add_expression -> add_expression addop term .)
    PLUS            reduce using rule 79 (add_expression -> add_expression addop term .)
    MINUS           reduce using rule 79 (add_expression -> add_expression addop term .)
    AND             reduce using rule 79 (add_expression -> add_expression addop term .)
    SEMICOLON       reduce using rule 79 (add_expression -> add_expression addop term .)
    RPAREN          reduce using rule 79 (add_expression -> add_expression addop term .)
    COMMA           reduce using rule 79 (add_expression -> add_expression addop term .)
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116

    mulop                          shift and go to state 114

state 136

    (83) term -> term mulop unary_expression .

    TIMES           reduce using rule 83 (term -> term mulop unary_expression .)
    DIVIDE          reduce using rule 83 (term -> term mulop unary_expression .)
    EQUALS          reduce using rule 83 (term -> term mulop unary_expression .)
    LESS            reduce using rule 83 (term -> term mulop unary_expression .)
    LARGE           reduce using rule 83 (term -> term mulop unary_expression .)
    LARGETHAN       reduce using rule 83 (term -> term mulop unary_expression .)
    LESSTHAN        reduce using rule 83 (term -> term mulop unary_expression .)
    NOTEQUAL        reduce using rule 83 (term -> term mulop unary_expression .)
    PLUS            reduce using rule 83 (term -> term mulop unary_expression .)
    MINUS           reduce using rule 83 (term -> term mulop unary_expression .)
    AND             reduce using rule 83 (term -> term mulop unary_expression .)
    SEMICOLON       reduce using rule 83 (term -> term mulop unary_expression .)
    RPAREN          reduce using rule 83 (term -> term mulop unary_expression .)
    COMMA           reduce using rule 83 (term -> term mulop unary_expression .)


state 137

    (66) var -> ID OPENBR NUMBER CLOSEBR .

    ASSIGN          reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    PLUS_ASSIGN     reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    MINUS_ASSIGN    reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    TIMES_ASSIGN    reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    DIVIDE_ASSIGN   reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    TIMES           reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    DIVIDE          reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    EQUALS          reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    LESS            reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    LARGE           reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    LARGETHAN       reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    LESSTHAN        reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    NOTEQUAL        reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    PLUS            reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    MINUS           reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    AND             reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    SEMICOLON       reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    RPAREN          reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)
    COMMA           reduce using rule 66 (var -> ID OPENBR NUMBER CLOSEBR .)


state 138

    (97) call -> ID LPAREN args RPAREN .

    TIMES           reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    DIVIDE          reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    EQUALS          reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    LESS            reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    LARGE           reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    LARGETHAN       reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    LESSTHAN        reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    NOTEQUAL        reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    PLUS            reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    MINUS           reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    AND             reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    SEMICOLON       reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 97 (call -> ID LPAREN args RPAREN .)
    COMMA           reduce using rule 97 (call -> ID LPAREN args RPAREN .)


state 139

    (100) args_list -> args_list COMMA . expression
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    expression                     shift and go to state 146
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 140

    (29) compound_stmt -> OBRACELET local_declarations statement_list local_declarations . CBRACELET
    (30) local_declarations -> local_declarations . var_declaration
    (6) var_declaration -> . type_specifier var_decl_list SEMICOLON
    (7) var_declaration -> . type_specifier error SEMICOLON
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (18) type_specifier -> . VOID
    (19) type_specifier -> . STRING

    CBRACELET       shift and go to state 147
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    STRING          shift and go to state 10

    var_declaration                shift and go to state 123
    type_specifier                 shift and go to state 125

state 141

    (32) statement_list -> statement statement_list .

    CBRACELET       reduce using rule 32 (statement_list -> statement statement_list .)
    INT             reduce using rule 32 (statement_list -> statement statement_list .)
    FLOAT           reduce using rule 32 (statement_list -> statement statement_list .)
    VOID            reduce using rule 32 (statement_list -> statement statement_list .)
    STRING          reduce using rule 32 (statement_list -> statement statement_list .)


state 142

    (45) if_stmt -> if LPAREN expression RPAREN . statement
    (46) if_stmt -> if LPAREN expression RPAREN . statement else statement
    (34) statement -> . expression_stmt
    (35) statement -> . compound_stmt
    (36) statement -> . if_stmt
    (37) statement -> . while_stmt
    (38) statement -> . for_stmt
    (39) statement -> . do_while_stmt
    (40) statement -> . break_stmt
    (41) expression_stmt -> . expression SEMICOLON
    (42) expression_stmt -> . SEMICOLON
    (29) compound_stmt -> . OBRACELET local_declarations statement_list local_declarations CBRACELET
    (45) if_stmt -> . if LPAREN expression RPAREN statement
    (46) if_stmt -> . if LPAREN expression RPAREN statement else statement
    (49) while_stmt -> . while LPAREN expression RPAREN statement
    (51) for_stmt -> . for LPAREN var_declaration expression semicolon expression RPAREN statement
    (43) do_while_stmt -> . do statement while LPAREN expression RPAREN
    (54) break_stmt -> . BREAK SEMICOLON
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (47) if -> . IF
    (50) while -> . WHILE
    (53) for -> . FOR
    (44) do -> . DO
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    SEMICOLON       shift and go to state 51
    OBRACELET       shift and go to state 52
    BREAK           shift and go to state 57
    ID              shift and go to state 40
    IF              shift and go to state 60
    WHILE           shift and go to state 61
    FOR             shift and go to state 62
    DO              shift and go to state 63
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    if                             shift and go to state 53
    expression                     shift and go to state 50
    statement                      shift and go to state 148
    expression_stmt                shift and go to state 43
    compound_stmt                  shift and go to state 44
    if_stmt                        shift and go to state 45
    while_stmt                     shift and go to state 46
    for_stmt                       shift and go to state 47
    do_while_stmt                  shift and go to state 48
    break_stmt                     shift and go to state 49
    while                          shift and go to state 54
    for                            shift and go to state 55
    do                             shift and go to state 56
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 143

    (49) while_stmt -> while LPAREN expression RPAREN . statement
    (34) statement -> . expression_stmt
    (35) statement -> . compound_stmt
    (36) statement -> . if_stmt
    (37) statement -> . while_stmt
    (38) statement -> . for_stmt
    (39) statement -> . do_while_stmt
    (40) statement -> . break_stmt
    (41) expression_stmt -> . expression SEMICOLON
    (42) expression_stmt -> . SEMICOLON
    (29) compound_stmt -> . OBRACELET local_declarations statement_list local_declarations CBRACELET
    (45) if_stmt -> . if LPAREN expression RPAREN statement
    (46) if_stmt -> . if LPAREN expression RPAREN statement else statement
    (49) while_stmt -> . while LPAREN expression RPAREN statement
    (51) for_stmt -> . for LPAREN var_declaration expression semicolon expression RPAREN statement
    (43) do_while_stmt -> . do statement while LPAREN expression RPAREN
    (54) break_stmt -> . BREAK SEMICOLON
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (47) if -> . IF
    (50) while -> . WHILE
    (53) for -> . FOR
    (44) do -> . DO
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    SEMICOLON       shift and go to state 51
    OBRACELET       shift and go to state 52
    BREAK           shift and go to state 57
    ID              shift and go to state 40
    IF              shift and go to state 60
    WHILE           shift and go to state 61
    FOR             shift and go to state 62
    DO              shift and go to state 63
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    while                          shift and go to state 54
    expression                     shift and go to state 50
    statement                      shift and go to state 149
    expression_stmt                shift and go to state 43
    compound_stmt                  shift and go to state 44
    if_stmt                        shift and go to state 45
    while_stmt                     shift and go to state 46
    for_stmt                       shift and go to state 47
    do_while_stmt                  shift and go to state 48
    break_stmt                     shift and go to state 49
    if                             shift and go to state 53
    for                            shift and go to state 55
    do                             shift and go to state 56
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 144

    (51) for_stmt -> for LPAREN var_declaration expression . semicolon expression RPAREN statement
    (52) semicolon -> . SEMICOLON

    SEMICOLON       shift and go to state 151

    semicolon                      shift and go to state 150

state 145

    (43) do_while_stmt -> do statement while LPAREN . expression RPAREN
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    expression                     shift and go to state 152
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 146

    (100) args_list -> args_list COMMA expression .

    COMMA           reduce using rule 100 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 100 (args_list -> args_list COMMA expression .)


state 147

    (29) compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .

    INT             reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    FLOAT           reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    VOID            reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    STRING          reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    $end            reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    WHILE           reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    SEMICOLON       reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    OBRACELET       reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    BREAK           reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    ID              reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    IF              reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    FOR             reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    DO              reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    NOTEQUAL        reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    PLUS            reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    MINUS           reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    LPAREN          reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    TRUE            reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    FALSE           reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    NUMBER          reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    FLOAT_NUMBER    reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    CBRACELET       reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)
    ELSE            reduce using rule 29 (compound_stmt -> OBRACELET local_declarations statement_list local_declarations CBRACELET .)


state 148

    (45) if_stmt -> if LPAREN expression RPAREN statement .
    (46) if_stmt -> if LPAREN expression RPAREN statement . else statement
    (48) else -> . ELSE

  ! shift/reduce conflict for ELSE resolved as shift
    INT             reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    VOID            reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    STRING          reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    $end            reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    SEMICOLON       reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    OBRACELET       reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    ID              reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    IF              reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    FOR             reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    DO              reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    NOTEQUAL        reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    FLOAT_NUMBER    reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    CBRACELET       reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 154

  ! ELSE            [ reduce using rule 45 (if_stmt -> if LPAREN expression RPAREN statement .) ]

    else                           shift and go to state 153

state 149

    (49) while_stmt -> while LPAREN expression RPAREN statement .

    INT             reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    VOID            reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    STRING          reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    $end            reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    SEMICOLON       reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    OBRACELET       reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    ID              reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    IF              reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    FOR             reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    DO              reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    NOTEQUAL        reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    FLOAT_NUMBER    reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    CBRACELET       reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 49 (while_stmt -> while LPAREN expression RPAREN statement .)


state 150

    (51) for_stmt -> for LPAREN var_declaration expression semicolon . expression RPAREN statement
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    ID              shift and go to state 40
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    expression                     shift and go to state 155
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 151

    (52) semicolon -> SEMICOLON .

    ID              reduce using rule 52 (semicolon -> SEMICOLON .)
    NOTEQUAL        reduce using rule 52 (semicolon -> SEMICOLON .)
    PLUS            reduce using rule 52 (semicolon -> SEMICOLON .)
    MINUS           reduce using rule 52 (semicolon -> SEMICOLON .)
    LPAREN          reduce using rule 52 (semicolon -> SEMICOLON .)
    TRUE            reduce using rule 52 (semicolon -> SEMICOLON .)
    FALSE           reduce using rule 52 (semicolon -> SEMICOLON .)
    NUMBER          reduce using rule 52 (semicolon -> SEMICOLON .)
    FLOAT_NUMBER    reduce using rule 52 (semicolon -> SEMICOLON .)


state 152

    (43) do_while_stmt -> do statement while LPAREN expression . RPAREN

    RPAREN          shift and go to state 156


state 153

    (46) if_stmt -> if LPAREN expression RPAREN statement else . statement
    (34) statement -> . expression_stmt
    (35) statement -> . compound_stmt
    (36) statement -> . if_stmt
    (37) statement -> . while_stmt
    (38) statement -> . for_stmt
    (39) statement -> . do_while_stmt
    (40) statement -> . break_stmt
    (41) expression_stmt -> . expression SEMICOLON
    (42) expression_stmt -> . SEMICOLON
    (29) compound_stmt -> . OBRACELET local_declarations statement_list local_declarations CBRACELET
    (45) if_stmt -> . if LPAREN expression RPAREN statement
    (46) if_stmt -> . if LPAREN expression RPAREN statement else statement
    (49) while_stmt -> . while LPAREN expression RPAREN statement
    (51) for_stmt -> . for LPAREN var_declaration expression semicolon expression RPAREN statement
    (43) do_while_stmt -> . do statement while LPAREN expression RPAREN
    (54) break_stmt -> . BREAK SEMICOLON
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (47) if -> . IF
    (50) while -> . WHILE
    (53) for -> . FOR
    (44) do -> . DO
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    SEMICOLON       shift and go to state 51
    OBRACELET       shift and go to state 52
    BREAK           shift and go to state 57
    ID              shift and go to state 40
    IF              shift and go to state 60
    WHILE           shift and go to state 61
    FOR             shift and go to state 62
    DO              shift and go to state 63
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    if                             shift and go to state 53
    expression                     shift and go to state 50
    statement                      shift and go to state 157
    expression_stmt                shift and go to state 43
    compound_stmt                  shift and go to state 44
    if_stmt                        shift and go to state 45
    while_stmt                     shift and go to state 46
    for_stmt                       shift and go to state 47
    do_while_stmt                  shift and go to state 48
    break_stmt                     shift and go to state 49
    while                          shift and go to state 54
    for                            shift and go to state 55
    do                             shift and go to state 56
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 154

    (48) else -> ELSE .

    SEMICOLON       reduce using rule 48 (else -> ELSE .)
    OBRACELET       reduce using rule 48 (else -> ELSE .)
    BREAK           reduce using rule 48 (else -> ELSE .)
    ID              reduce using rule 48 (else -> ELSE .)
    IF              reduce using rule 48 (else -> ELSE .)
    WHILE           reduce using rule 48 (else -> ELSE .)
    FOR             reduce using rule 48 (else -> ELSE .)
    DO              reduce using rule 48 (else -> ELSE .)
    NOTEQUAL        reduce using rule 48 (else -> ELSE .)
    PLUS            reduce using rule 48 (else -> ELSE .)
    MINUS           reduce using rule 48 (else -> ELSE .)
    LPAREN          reduce using rule 48 (else -> ELSE .)
    TRUE            reduce using rule 48 (else -> ELSE .)
    FALSE           reduce using rule 48 (else -> ELSE .)
    NUMBER          reduce using rule 48 (else -> ELSE .)
    FLOAT_NUMBER    reduce using rule 48 (else -> ELSE .)


state 155

    (51) for_stmt -> for LPAREN var_declaration expression semicolon expression . RPAREN statement

    RPAREN          shift and go to state 158


state 156

    (43) do_while_stmt -> do statement while LPAREN expression RPAREN .

    INT             reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    FLOAT           reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    VOID            reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    STRING          reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    $end            reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    WHILE           reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    OBRACELET       reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    BREAK           reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    ID              reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    IF              reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    FOR             reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    DO              reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    PLUS            reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    MINUS           reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    LPAREN          reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    TRUE            reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    FALSE           reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    NUMBER          reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    FLOAT_NUMBER    reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    CBRACELET       reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)
    ELSE            reduce using rule 43 (do_while_stmt -> do statement while LPAREN expression RPAREN .)


state 157

    (46) if_stmt -> if LPAREN expression RPAREN statement else statement .

    INT             reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    FLOAT           reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    VOID            reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    STRING          reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    $end            reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    WHILE           reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    SEMICOLON       reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    OBRACELET       reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    BREAK           reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    ID              reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    IF              reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    FOR             reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    DO              reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    NOTEQUAL        reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    PLUS            reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    MINUS           reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    LPAREN          reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    TRUE            reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    FALSE           reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    NUMBER          reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    FLOAT_NUMBER    reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    CBRACELET       reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)
    ELSE            reduce using rule 46 (if_stmt -> if LPAREN expression RPAREN statement else statement .)


state 158

    (51) for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN . statement
    (34) statement -> . expression_stmt
    (35) statement -> . compound_stmt
    (36) statement -> . if_stmt
    (37) statement -> . while_stmt
    (38) statement -> . for_stmt
    (39) statement -> . do_while_stmt
    (40) statement -> . break_stmt
    (41) expression_stmt -> . expression SEMICOLON
    (42) expression_stmt -> . SEMICOLON
    (29) compound_stmt -> . OBRACELET local_declarations statement_list local_declarations CBRACELET
    (45) if_stmt -> . if LPAREN expression RPAREN statement
    (46) if_stmt -> . if LPAREN expression RPAREN statement else statement
    (49) while_stmt -> . while LPAREN expression RPAREN statement
    (51) for_stmt -> . for LPAREN var_declaration expression semicolon expression RPAREN statement
    (43) do_while_stmt -> . do statement while LPAREN expression RPAREN
    (54) break_stmt -> . BREAK SEMICOLON
    (55) expression -> . var ASSIGN expression
    (56) expression -> . var addopration_expression expression
    (57) expression -> . var mulopration_expression expression
    (58) expression -> . ID PLUSPLUS
    (59) expression -> . ID MINUSMINUS
    (60) expression -> . simple_expression
    (47) if -> . IF
    (50) while -> . WHILE
    (53) for -> . FOR
    (44) do -> . DO
    (65) var -> . ID
    (66) var -> . ID OPENBR NUMBER CLOSEBR
    (67) simple_expression -> . simple_expression AND unary_rel_expression
    (68) simple_expression -> . unary_rel_expression
    (69) unary_rel_expression -> . NOTEQUAL unary_rel_expression
    (70) unary_rel_expression -> . rel_expression
    (71) rel_expression -> . add_expression relop add_expression
    (72) rel_expression -> . add_expression
    (79) add_expression -> . add_expression addop term
    (80) add_expression -> . term
    (83) term -> . term mulop unary_expression
    (84) term -> . unary_expression
    (87) unary_expression -> . addop unary_expression
    (88) unary_expression -> . factor
    (81) addop -> . PLUS
    (82) addop -> . MINUS
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . var
    (91) factor -> . call
    (92) factor -> . constant
    (97) call -> . ID LPAREN args RPAREN
    (93) constant -> . TRUE
    (94) constant -> . FALSE
    (95) constant -> . NUMBER
    (96) constant -> . FLOAT_NUMBER

    SEMICOLON       shift and go to state 51
    OBRACELET       shift and go to state 52
    BREAK           shift and go to state 57
    ID              shift and go to state 40
    IF              shift and go to state 60
    WHILE           shift and go to state 61
    FOR             shift and go to state 62
    DO              shift and go to state 63
    NOTEQUAL        shift and go to state 66
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NUMBER          shift and go to state 64
    FLOAT_NUMBER    shift and go to state 79

    for                            shift and go to state 55
    expression                     shift and go to state 50
    statement                      shift and go to state 159
    expression_stmt                shift and go to state 43
    compound_stmt                  shift and go to state 44
    if_stmt                        shift and go to state 45
    while_stmt                     shift and go to state 46
    for_stmt                       shift and go to state 47
    do_while_stmt                  shift and go to state 48
    break_stmt                     shift and go to state 49
    if                             shift and go to state 53
    while                          shift and go to state 54
    do                             shift and go to state 56
    var                            shift and go to state 58
    simple_expression              shift and go to state 59
    unary_rel_expression           shift and go to state 65
    rel_expression                 shift and go to state 67
    add_expression                 shift and go to state 68
    addop                          shift and go to state 69
    term                           shift and go to state 70
    unary_expression               shift and go to state 71
    factor                         shift and go to state 72
    call                           shift and go to state 75
    constant                       shift and go to state 76

state 159

    (51) for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .

    INT             reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    FLOAT           reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    VOID            reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    STRING          reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    $end            reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    WHILE           reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    SEMICOLON       reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    OBRACELET       reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    BREAK           reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    ID              reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    IF              reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    FOR             reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    DO              reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    NOTEQUAL        reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    PLUS            reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    MINUS           reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    LPAREN          reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    TRUE            reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    FALSE           reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    NUMBER          reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    FLOAT_NUMBER    reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    CBRACELET       reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)
    ELSE            reduce using rule 51 (for_stmt -> for LPAREN var_declaration expression semicolon expression RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 33 resolved as shift
WARNING: shift/reduce conflict for INT in state 88 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 88 resolved as shift
WARNING: shift/reduce conflict for VOID in state 88 resolved as shift
WARNING: shift/reduce conflict for STRING in state 88 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 148 resolved as shift
